
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.4.1.213

// ldbanno -n Verilog -o Parallel2CSI2_Parallel2CSI2_mapvo.vo -w -neg -gui Parallel2CSI2_Parallel2CSI2_map.ncd 
// Netlist created on Tue Jul 14 16:04:22 2015
// Netlist written on Tue Jul 14 16:04:25 2015
// Design is for device LCMXO2-7000HE
// Design is for package TQFP144
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module packetheader ( reset_n, short_en, long_en, byte_clk, byte_data, vc, dt, 
                      wc, chksum_rdy, chksum, bytepkt_en, bytepkt, EoTp );
  input  reset_n, short_en, long_en, byte_clk;
  input  [31:0] byte_data;
  input  [1:0] vc;
  input  [5:0] dt;
  input  [15:0] wc;
  input  chksum_rdy;
  input  [15:0] chksum;
  input  EoTp;
  output bytepkt_en;
  output [31:0] bytepkt;
  wire   \lpkt_cnt[0] , lpkt_cnt, \lpkt_cnt_s[0] , byte_clk5_c, 
         \lpkt_cnt_cry[0] , \u_PH_DLY_FIFO/rcount_3 , \u_PH_DLY_FIFO/rcount_2 , 
         \u_PH_DLY_FIFO/ircount_3 , \u_PH_DLY_FIFO/ircount_2 , 
         \u_PH_DLY_FIFO/rden_i , un1_q_bytepkt_en_0, \u_PH_DLY_FIFO/co0_1 , 
         \u_PH_DLY_FIFO/full_d , \u_PH_DLY_FIFO/full_d_c , 
         \u_PH_DLY_FIFO/Full , \u_PH_DLY_FIFO/wcount_r1 , 
         \u_PH_DLY_FIFO/rcount_1 , \u_PH_DLY_FIFO/w_g2b_xor_cluster_0 , 
         \u_PH_DLY_FIFO/rcount_0 , \u_PH_DLY_FIFO/r_gcount_0 , 
         \u_PH_DLY_FIFO/r_gcount_1 , \u_PH_DLY_FIFO/cmp_ci , 
         \u_PH_DLY_FIFO/r_gcount_w1 , \u_PH_DLY_FIFO/r_gcount_w0 , 
         \u_PH_DLY_FIFO/co0_2 , \u_PH_DLY_FIFO/w_gctr_ci , 
         \u_PH_DLY_FIFO/wcount_1 , \u_PH_DLY_FIFO/wcount_0 , 
         \u_PH_DLY_FIFO/iwcount_1 , \u_PH_DLY_FIFO/iwcount_0 , 
         \u_PH_DLY_FIFO/wren_i , \u_PH_DLY_FIFO/co0 , \u_PH_DLY_FIFO/wcount_3 , 
         \u_PH_DLY_FIFO/wcount_2 , \u_PH_DLY_FIFO/iwcount_3 , 
         \u_PH_DLY_FIFO/iwcount_2 , \u_PH_DLY_FIFO/w_gcount_r0 , 
         \u_PH_DLY_FIFO/w_gcount_r1 , \u_PH_DLY_FIFO/w_gcount_r21 , 
         \u_PH_DLY_FIFO/w_gcount_r20 , \u_PH_DLY_FIFO/r_gctr_ci , 
         \u_PH_DLY_FIFO/ircount_1 , \u_PH_DLY_FIFO/ircount_0 , 
         \u_PH_DLY_FIFO/w_gcount_0 , \u_PH_DLY_FIFO/w_gcount_1 , 
         \u_PH_DLY_FIFO/empty_d , \u_PH_DLY_FIFO/empty_d_c , 
         \u_PH_DLY_FIFO/Empty , \u_PH_DLY_FIFO/w_gcount_r2 , 
         \u_PH_DLY_FIFO/w_gcount_r3 , \u_PH_DLY_FIFO/w_gcount_r23 , 
         \u_PH_DLY_FIFO/w_gcount_r22 , \u_PH_DLY_FIFO/cmp_ci_1 , 
         \u_PH_DLY_FIFO/full_cmp_clr , \u_PH_DLY_FIFO/full_cmp_set , 
         \u_PH_DLY_FIFO/rcount_w2 , \u_PH_DLY_FIFO/co0_3 , 
         \u_PH_DLY_FIFO/r_gcount_w21 , \u_PH_DLY_FIFO/r_gcount_w20 , 
         \u_PH_DLY_FIFO/rcount_w1 , \u_PH_DLY_FIFO/r_g2b_xor_cluster_0 , 
         \u_PH_DLY_FIFO/r_gcount_w2 , \u_PH_DLY_FIFO/r_gcount_w3 , 
         \u_PH_DLY_FIFO/r_gcount_w23 , \u_PH_DLY_FIFO/r_gcount_w22 , 
         \u_PH_DLY_FIFO/empty_cmp_clr , \u_PH_DLY_FIFO/empty_cmp_set , 
         \u_PH_DLY_FIFO/wcount_r2 , \u_PH_DLY_FIFO/w_gcount_2 , 
         \u_PH_DLY_FIFO/w_gcount_3 , un10_wc_end_flag_0_N_2_i, 
         un10_wc_end_flag_0_I_51_cry, chksum_En, 
         \un2_wc_end_flag.un2_wc_end_flag_cry_13_0_S1 , \lpkt_cnt[14] , 
         \lpkt_cnt[15] , \un10_wc_end_flag_0_data_tmp[6] , \lpkt_cnt[12] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_11_0_S1 , \lpkt_cnt[13] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_13_0_S0 , \lpkt_cnt[10] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_9_0_S1 , \lpkt_cnt[11] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_11_0_S0 , 
         \un10_wc_end_flag_0_data_tmp[4] , \lpkt_cnt[8] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_7_0_S1 , \lpkt_cnt[9] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_9_0_S0 , \lpkt_cnt[6] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_5_0_S1 , \lpkt_cnt[7] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_7_0_S0 , 
         \un10_wc_end_flag_0_data_tmp[2] , \lpkt_cnt[4] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_3_0_S1 , \lpkt_cnt[5] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_5_0_S0 , \lpkt_cnt[2] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_1_0_S1 , \lpkt_cnt[3] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_3_0_S0 , 
         \un10_wc_end_flag_0_data_tmp[0] , \q_wc[2] , \lpkt_cnt[1] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_1_0_S0 , \q_wc[15] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_12 , \q_wc[14] , \q_wc[13] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_10 , \q_wc[12] , \q_wc[11] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_8 , \q_wc[10] , \q_wc[9] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_6 , \q_wc[8] , \q_wc[7] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_4 , \q_wc[6] , \q_wc[5] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_2 , \q_wc[4] , \q_wc[3] , 
         \un2_wc_end_flag.un2_wc_end_flag_cry_0 , \lpkt_cnt_s[15] , 
         \lpkt_cnt_cry[14] , \lpkt_cnt_s[14] , \lpkt_cnt_s[13] , 
         \lpkt_cnt_cry[12] , \lpkt_cnt_s[12] , \lpkt_cnt_s[11] , 
         \lpkt_cnt_cry[10] , \lpkt_cnt_s[10] , \lpkt_cnt_s[9] , 
         \lpkt_cnt_cry[8] , \lpkt_cnt_s[8] , \lpkt_cnt_s[7] , 
         \lpkt_cnt_cry[6] , \lpkt_cnt_s[6] , \lpkt_cnt_s[5] , 
         \lpkt_cnt_cry[4] , \lpkt_cnt_s[4] , \lpkt_cnt_s[3] , 
         \lpkt_cnt_cry[2] , \lpkt_cnt_s[2] , \lpkt_cnt_s[1] , \byte_data7_c[3] , 
         \byte_data7_c[2] , \byte_data7_c[1] , \byte_data7_c[0] , 
         \u_PH_DLY_FIFO/vcc5 , \u_PH_DLY_FIFO/wptr_2 , \u_PH_DLY_FIFO/wptr_1 , 
         \u_PH_DLY_FIFO/wptr_0 , \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_7/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_7/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_7/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_7/WD3_INT , \u_PH_DLY_FIFO/rptr_2 , 
         \u_PH_DLY_FIFO/rptr_1 , \u_PH_DLY_FIFO/rptr_0 , 
         \u_PH_DLY_FIFO/rdataout1 , \u_PH_DLY_FIFO/rdataout0 , 
         \byte_data7_fifo[0] , \byte_data7_fifo[1] , \u_PH_DLY_FIFO/rdataout3 , 
         \u_PH_DLY_FIFO/rdataout2 , \byte_data7_fifo[2] , \byte_data7_fifo[3] , 
         \byte_data7_c[31] , \byte_data7_c[30] , \byte_data7_c[29] , 
         \byte_data7_c[28] , \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_0/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_0/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_0/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_0/WD3_INT , \u_PH_DLY_FIFO/rdataout29 , 
         \u_PH_DLY_FIFO/rdataout28 , \byte_data7_fifo[28] , 
         \byte_data7_fifo[29] , \u_PH_DLY_FIFO/rdataout31 , 
         \u_PH_DLY_FIFO/rdataout30 , \byte_data7_fifo[30] , 
         \byte_data7_fifo[31] , \byte_data7_c[27] , \byte_data7_c[26] , 
         \byte_data7_c[25] , \byte_data7_c[24] , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_1/WD3_INT , \u_PH_DLY_FIFO/rdataout25 , 
         \u_PH_DLY_FIFO/rdataout24 , \byte_data7_fifo[24] , 
         \byte_data7_fifo[25] , \u_PH_DLY_FIFO/rdataout27 , 
         \u_PH_DLY_FIFO/rdataout26 , \byte_data7_fifo[26] , 
         \byte_data7_fifo[27] , \byte_data7_c[23] , \byte_data7_c[22] , 
         \byte_data7_c[21] , \byte_data7_c[20] , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_2/WD3_INT , \u_PH_DLY_FIFO/rdataout21 , 
         \u_PH_DLY_FIFO/rdataout20 , \byte_data7_fifo[20] , 
         \byte_data7_fifo[21] , \u_PH_DLY_FIFO/rdataout23 , 
         \u_PH_DLY_FIFO/rdataout22 , \byte_data7_fifo[22] , 
         \byte_data7_fifo[23] , \byte_data7_c[19] , \byte_data7_c[18] , 
         \byte_data7_c[17] , \byte_data7_c[16] , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_3/WD3_INT , \u_PH_DLY_FIFO/rdataout17 , 
         \u_PH_DLY_FIFO/rdataout16 , \byte_data7_fifo[16] , 
         \byte_data7_fifo[17] , \u_PH_DLY_FIFO/rdataout19 , 
         \u_PH_DLY_FIFO/rdataout18 , \byte_data7_fifo[18] , 
         \byte_data7_fifo[19] , \byte_data7_c[15] , \byte_data7_c[14] , 
         \byte_data7_c[13] , \byte_data7_c[12] , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_4/WD3_INT , \u_PH_DLY_FIFO/rdataout13 , 
         \u_PH_DLY_FIFO/rdataout12 , \byte_data7_fifo[12] , 
         \byte_data7_fifo[13] , \u_PH_DLY_FIFO/rdataout15 , 
         \u_PH_DLY_FIFO/rdataout14 , \byte_data7_fifo[14] , 
         \byte_data7_fifo[15] , \byte_data7_c[11] , \byte_data7_c[10] , 
         \byte_data7_c[9] , \byte_data7_c[8] , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_5/WD3_INT , \u_PH_DLY_FIFO/rdataout9 , 
         \u_PH_DLY_FIFO/rdataout8 , \byte_data7_fifo[8] , \byte_data7_fifo[9] , 
         \u_PH_DLY_FIFO/rdataout11 , \u_PH_DLY_FIFO/rdataout10 , 
         \byte_data7_fifo[10] , \byte_data7_fifo[11] , \byte_data7_c[7] , 
         \byte_data7_c[6] , \byte_data7_c[5] , \byte_data7_c[4] , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD3_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WD0_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WD1_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WD2_INT , 
         \u_PH_DLY_FIFO/fifo_pfu_0_6/WD3_INT , \u_PH_DLY_FIFO/rdataout5 , 
         \u_PH_DLY_FIFO/rdataout4 , \byte_data7_fifo[4] , \byte_data7_fifo[5] , 
         \u_PH_DLY_FIFO/rdataout7 , \u_PH_DLY_FIFO/rdataout6 , 
         \byte_data7_fifo[6] , \byte_data7_fifo[7] , \q_ECC[4] , WC_1_En, 
         q_long_pkt_indicator, EoTp_c, \un2_EoTp_En_0[0] , \EoTp_En[0] , N_180, 
         \EoTp_En[1] , \bytepkt_cnst_31_0_.DataID_En_2_0_a2_0 , \PH_cnt[3] , 
         \PH_cnt[2] , N_196, short_en_c, q_short_en, q_long_en, long_en_c, 
         N_98, PH_En, \PH_cnt[1] , \PH_cnt[0] , N_169_i, \un7_PH_cnt_0_a2[0] , 
         N_162, N_94_i, N_171_i_i, DataID_En_2, N_470, q_chksum_En, hsSync_En, 
         N_310_i, bytepkt_en_c, N_429, hsSync_En_2, un2_lpkt_cnt_En_0_a2, N_91, 
         \bytepkt_cnst_31_0_.un87_q_ECC_0_a2_4 , 
         \bytepkt_cnst_31_0_.un87_q_ECC_0_a2_3 , N_173_i, N_172_i, 
         \bytepkt_cnst_31_0_.un108_q_ECC_0_a2_6 , 
         \bytepkt_cnst_31_0_.un108_q_ECC_0_a2_5 , 
         \bytepkt_cnst_31_0_.un108_q_ECC_0_a2_4 , N_157_i, un87_q_ECC_0_a2, 
         un108_q_ECC_0_a2, un5_q_ECC_0, \q_ECC[0] , \q_ECC[1] , un7_q_ECC_3, 
         \bytepkt_cnst_31_0_.un47_q_ECC_0_a2_5 , 
         \bytepkt_cnst_31_0_.un47_q_ECC_0_a2_4 , un7_q_ECC_2, 
         \bytepkt_cnst_31_0_.un67_q_ECC_0_a2_5 , 
         \bytepkt_cnst_31_0_.un67_q_ECC_0_a2_4 , un47_q_ECC_0_a2, 
         un67_q_ECC_0_a2, \q_ECC[2] , \q_ECC[3] , 
         \bytepkt_cnst_31_0_.un7_q_ECC_0_a2_4 , un7_q_ECC_5, 
         \bytepkt_cnst_31_0_.un27_q_ECC_0_a2_5 , 
         \bytepkt_cnst_31_0_.un27_q_ECC_0_a2_4 , un7_q_ECC, un27_q_ECC, 
         \q_ECC[5] , q2_short_en, N_453_i, \u_PH_DLY_FIFO/r_gdata_1 , 
         \u_PH_DLY_FIFO/r_gdata_0 , \u_PH_DLY_FIFO/r_gdata_2 , 
         \u_PH_DLY_FIFO/r_gcount_2 , \u_PH_DLY_FIFO/r_gcount_3 , 
         \u_PH_DLY_FIFO/w_gdata_1 , \u_PH_DLY_FIFO/w_gdata_0 , 
         \u_PH_DLY_FIFO/w_gdata_2 , \q_dt[5] , \q_dt[2] , \q_dt[0] , 
         \u_PH_DLY_FIFO/wptr_3 , N_150, N_149, N_153, N_164, N_151, 
         \bytepkt_2[28] , N_306, \bytepkt_2[21] , N_303, \bytepkt_2[20] , 
         N_197, N_427, \bytepkt_2[19] , N_155, N_338, N_189, N_156, N_69_i, 
         N_181, \bytepkt_2[29] , N_194, N_80_i, N_193, N_82_i, N_191, N_159, 
         \q_chksum[4] , N_463, N_208, N_207, \bytepkt_2[4] , \q_chksum[0] , 
         N_205, N_35_i, \q_chksum[5] , N_210, \bytepkt_2[5] , \q_chksum[13] , 
         N_242, \bytepkt_2[13] , \q_chksum[15] , N_246, \bytepkt_2[15] , 
         \q_chksum[1] , N_313, \q_dt[1] , N_53_i, \q_chksum[2] , N_315, N_55_i, 
         \q_chksum[8] , N_323, \q_wc[0] , N_60_i, \q_chksum[10] , N_327, 
         N_64_i, \q_chksum[12] , N_329, \bytepkt_2[12] , N_346, 
         \bytepkt_2[27] , N_342, N_78_i, \q_chksum[9] , N_325, \q_wc[1] , 
         N_62_i, \q_vc[0] , \bytepkt_cnst_31_0_.bytepkt_2_i_0[22] , N_76_i, 
         N_466, N_163, \q_chksum[6] , \bytepkt_cnst_31_0_.bytepkt_2_i_0[6] , 
         N_58_i, N_188, \q_chksum[14] , \bytepkt_cnst_31_0_.bytepkt_2_i_0[14] , 
         N_67_i, \bytepkt_cnst_31_0_.bytepkt_2_0_a2_1[4] , \q_chksum[7] , 
         \bytepkt_cnst_31_0_.bytepkt_2_0_0[7] , \bytepkt_2[7] , 
         \bytepkt_cnst_31_0_.bytepkt_2_i_0[17] , N_71_i, N_190, N_73_i, 
         \bytepkt_2[30] , \q_chksum[11] , N_177, 
         \bytepkt_cnst_31_0_.bytepkt_2_0_0[11] , \bytepkt_2[11] , \q_vc[1] , 
         \bytepkt_cnst_31_0_.bytepkt_2_0_0[23] , N_428, \bytepkt_2[23] , 
         \q_chksum[3] , \bytepkt_cnst_31_0_.bytepkt_2_0_0[3] , N_319, 
         \bytepkt_2[3] , \bytepkt_cnst_31_0_.un7_q_ECC_0_a2_1 , 
         \u_PH_DLY_FIFO/rptr_3 , \q_dt[3] , \q_dt[4] , \bytepkt_2[31] , 
         q_bytepkt_en, N_347_i, reset_n6_c, \bytepkt_c[31] , \bytepkt_c[30] , 
         \bytepkt_c[29] , \bytepkt_c[28] , \bytepkt_c[27] , \bytepkt_c[26] , 
         \bytepkt_c[25] , \bytepkt_c[24] , \bytepkt_c[23] , \bytepkt_c[22] , 
         \bytepkt_c[21] , \bytepkt_c[20] , \bytepkt_c[19] , \bytepkt_c[18] , 
         \bytepkt_c[17] , \bytepkt_c[16] , \bytepkt_c[15] , \bytepkt_c[14] , 
         \bytepkt_c[13] , \bytepkt_c[12] , \bytepkt_c[11] , \bytepkt_c[10] , 
         \bytepkt_c[9] , \bytepkt_c[8] , \bytepkt_c[7] , \bytepkt_c[6] , 
         \bytepkt_c[5] , \bytepkt_c[4] , \bytepkt_c[3] , \bytepkt_c[2] , 
         \bytepkt_c[1] , \bytepkt_c[0] , \chksum_c[15] , chksum_rdy_c, 
         \chksum_c[14] , \chksum_c[13] , \chksum_c[12] , \chksum_c[11] , 
         \chksum_c[10] , \chksum_c[9] , \chksum_c[8] , \chksum_c[7] , 
         \chksum_c[6] , \chksum_c[5] , \chksum_c[4] , \chksum_c[3] , 
         \chksum_c[2] , \chksum_c[1] , \chksum_c[0] , \wc_c[15] , \wc_c[14] , 
         \wc_c[13] , \wc_c[12] , \wc_c[11] , \wc_c[10] , \wc_c[9] , \wc_c[8] , 
         \wc_c[7] , \wc_c[6] , \wc_c[5] , \wc_c[4] , \wc_c[3] , \wc_c[2] , 
         \wc_c[1] , \wc_c[0] , \dt_c[5] , \dt_c[4] , \dt_c[3] , \dt_c[2] , 
         \dt_c[1] , \dt_c[0] , \vc_c[1] , \vc_c[0] , vcc5I;

  SLICE4_0 SLICE4_0( .B1(\lpkt_cnt[0] ), .A1(lpkt_cnt), .B0(lpkt_cnt), 
    .DI1(\lpkt_cnt_s[0] ), .CLK(byte_clk5_c), .F1(\lpkt_cnt_s[0] ), 
    .Q1(\lpkt_cnt[0] ), .FCO(\lpkt_cnt_cry[0] ));
  u_PH_DLY_FIFO_SLICE4_1 \u_PH_DLY_FIFO/SLICE4_1 ( .A1(\u_PH_DLY_FIFO/rcount_3 ), 
    .A0(\u_PH_DLY_FIFO/rcount_2 ), .DI1(\u_PH_DLY_FIFO/ircount_3 ), 
    .DI0(\u_PH_DLY_FIFO/ircount_2 ), .CE(\u_PH_DLY_FIFO/rden_i ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .FCI(\u_PH_DLY_FIFO/co0_1 ), 
    .F0(\u_PH_DLY_FIFO/ircount_2 ), .Q0(\u_PH_DLY_FIFO/rcount_2 ), 
    .F1(\u_PH_DLY_FIFO/ircount_3 ), .Q1(\u_PH_DLY_FIFO/rcount_3 ));
  u_PH_DLY_FIFO_SLICE4_2 \u_PH_DLY_FIFO/SLICE4_2 ( .DI0(\u_PH_DLY_FIFO/full_d ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .FCI(\u_PH_DLY_FIFO/full_d_c ), 
    .F0(\u_PH_DLY_FIFO/full_d ), .Q0(\u_PH_DLY_FIFO/Full ));
  u_PH_DLY_FIFO_SLICE4_3 \u_PH_DLY_FIFO/SLICE4_3 ( 
    .B1(\u_PH_DLY_FIFO/wcount_r1 ), .A1(\u_PH_DLY_FIFO/rcount_1 ), 
    .B0(\u_PH_DLY_FIFO/w_g2b_xor_cluster_0 ), .A0(\u_PH_DLY_FIFO/rcount_0 ), 
    .M1(\u_PH_DLY_FIFO/r_gcount_0 ), .M0(\u_PH_DLY_FIFO/r_gcount_1 ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .FCI(\u_PH_DLY_FIFO/cmp_ci ), 
    .Q0(\u_PH_DLY_FIFO/r_gcount_w1 ), .Q1(\u_PH_DLY_FIFO/r_gcount_w0 ), 
    .FCO(\u_PH_DLY_FIFO/co0_2 ));
  u_PH_DLY_FIFO_SLICE4_4 \u_PH_DLY_FIFO/SLICE4_4 ( 
    .FCO(\u_PH_DLY_FIFO/w_gctr_ci ));
  u_PH_DLY_FIFO_SLICE4_5 \u_PH_DLY_FIFO/SLICE4_5 ( .A1(\u_PH_DLY_FIFO/wcount_1 ), 
    .A0(\u_PH_DLY_FIFO/wcount_0 ), .DI1(\u_PH_DLY_FIFO/iwcount_1 ), 
    .DI0(\u_PH_DLY_FIFO/iwcount_0 ), .CE(\u_PH_DLY_FIFO/wren_i ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .FCI(\u_PH_DLY_FIFO/w_gctr_ci ), .F0(\u_PH_DLY_FIFO/iwcount_0 ), 
    .Q0(\u_PH_DLY_FIFO/wcount_0 ), .F1(\u_PH_DLY_FIFO/iwcount_1 ), 
    .Q1(\u_PH_DLY_FIFO/wcount_1 ), .FCO(\u_PH_DLY_FIFO/co0 ));
  u_PH_DLY_FIFO_SLICE4_6 \u_PH_DLY_FIFO/SLICE4_6 ( .A1(\u_PH_DLY_FIFO/wcount_3 ), 
    .A0(\u_PH_DLY_FIFO/wcount_2 ), .DI1(\u_PH_DLY_FIFO/iwcount_3 ), 
    .DI0(\u_PH_DLY_FIFO/iwcount_2 ), .CE(\u_PH_DLY_FIFO/wren_i ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .FCI(\u_PH_DLY_FIFO/co0 ), 
    .F0(\u_PH_DLY_FIFO/iwcount_2 ), .Q0(\u_PH_DLY_FIFO/wcount_2 ), 
    .F1(\u_PH_DLY_FIFO/iwcount_3 ), .Q1(\u_PH_DLY_FIFO/wcount_3 ));
  u_PH_DLY_FIFO_SLICE4_7 \u_PH_DLY_FIFO/SLICE4_7 ( 
    .M1(\u_PH_DLY_FIFO/w_gcount_r0 ), .M0(\u_PH_DLY_FIFO/w_gcount_r1 ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .Q0(\u_PH_DLY_FIFO/w_gcount_r21 ), .Q1(\u_PH_DLY_FIFO/w_gcount_r20 ), 
    .FCO(\u_PH_DLY_FIFO/r_gctr_ci ));
  u_PH_DLY_FIFO_SLICE4_8 \u_PH_DLY_FIFO/SLICE4_8 ( .A1(\u_PH_DLY_FIFO/rcount_1 ), 
    .A0(\u_PH_DLY_FIFO/rcount_0 ), .DI1(\u_PH_DLY_FIFO/ircount_1 ), 
    .DI0(\u_PH_DLY_FIFO/ircount_0 ), .CE(\u_PH_DLY_FIFO/rden_i ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .FCI(\u_PH_DLY_FIFO/r_gctr_ci ), .F0(\u_PH_DLY_FIFO/ircount_0 ), 
    .Q0(\u_PH_DLY_FIFO/rcount_0 ), .F1(\u_PH_DLY_FIFO/ircount_1 ), 
    .Q1(\u_PH_DLY_FIFO/rcount_1 ), .FCO(\u_PH_DLY_FIFO/co0_1 ));
  u_PH_DLY_FIFO_SLICE4_9 \u_PH_DLY_FIFO/SLICE4_9 ( .B1(\u_PH_DLY_FIFO/rden_i ), 
    .A1(\u_PH_DLY_FIFO/rden_i ), .M1(\u_PH_DLY_FIFO/w_gcount_0 ), 
    .M0(\u_PH_DLY_FIFO/w_gcount_1 ), .LSR(un1_q_bytepkt_en_0), 
    .CLK(byte_clk5_c), .Q0(\u_PH_DLY_FIFO/w_gcount_r1 ), 
    .Q1(\u_PH_DLY_FIFO/w_gcount_r0 ), .FCO(\u_PH_DLY_FIFO/cmp_ci ));
  u_PH_DLY_FIFO_SLICE4_10 \u_PH_DLY_FIFO/SLICE4_10 ( 
    .DI0(\u_PH_DLY_FIFO/empty_d ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .FCI(\u_PH_DLY_FIFO/empty_d_c ), .F0(\u_PH_DLY_FIFO/empty_d ), 
    .Q0(\u_PH_DLY_FIFO/Empty ));
  u_PH_DLY_FIFO_SLICE4_11 \u_PH_DLY_FIFO/SLICE4_11 ( .B1(\u_PH_DLY_FIFO/wren_i ), 
    .A1(\u_PH_DLY_FIFO/wren_i ), .M1(\u_PH_DLY_FIFO/w_gcount_r2 ), 
    .M0(\u_PH_DLY_FIFO/w_gcount_r3 ), .LSR(un1_q_bytepkt_en_0), 
    .CLK(byte_clk5_c), .Q0(\u_PH_DLY_FIFO/w_gcount_r23 ), 
    .Q1(\u_PH_DLY_FIFO/w_gcount_r22 ), .FCO(\u_PH_DLY_FIFO/cmp_ci_1 ));
  u_PH_DLY_FIFO_SLICE4_12 \u_PH_DLY_FIFO/SLICE4_12 ( 
    .B1(\u_PH_DLY_FIFO/full_cmp_clr ), .A1(\u_PH_DLY_FIFO/full_cmp_set ), 
    .B0(\u_PH_DLY_FIFO/rcount_w2 ), .A0(\u_PH_DLY_FIFO/wcount_2 ), 
    .M1(\u_PH_DLY_FIFO/r_gcount_w0 ), .M0(\u_PH_DLY_FIFO/r_gcount_w1 ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .FCI(\u_PH_DLY_FIFO/co0_3 ), 
    .Q0(\u_PH_DLY_FIFO/r_gcount_w21 ), .Q1(\u_PH_DLY_FIFO/r_gcount_w20 ), 
    .FCO(\u_PH_DLY_FIFO/full_d_c ));
  u_PH_DLY_FIFO_SLICE4_13 \u_PH_DLY_FIFO/SLICE4_13 ( 
    .B1(\u_PH_DLY_FIFO/rcount_w1 ), .A1(\u_PH_DLY_FIFO/wcount_1 ), 
    .B0(\u_PH_DLY_FIFO/r_g2b_xor_cluster_0 ), .A0(\u_PH_DLY_FIFO/wcount_0 ), 
    .M1(\u_PH_DLY_FIFO/r_gcount_w2 ), .M0(\u_PH_DLY_FIFO/r_gcount_w3 ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .FCI(\u_PH_DLY_FIFO/cmp_ci_1 ), 
    .Q0(\u_PH_DLY_FIFO/r_gcount_w23 ), .Q1(\u_PH_DLY_FIFO/r_gcount_w22 ), 
    .FCO(\u_PH_DLY_FIFO/co0_3 ));
  u_PH_DLY_FIFO_SLICE4_14 \u_PH_DLY_FIFO/SLICE4_14 ( 
    .B1(\u_PH_DLY_FIFO/empty_cmp_clr ), .A1(\u_PH_DLY_FIFO/empty_cmp_set ), 
    .B0(\u_PH_DLY_FIFO/wcount_r2 ), .A0(\u_PH_DLY_FIFO/rcount_2 ), 
    .M1(\u_PH_DLY_FIFO/w_gcount_2 ), .M0(\u_PH_DLY_FIFO/w_gcount_3 ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .FCI(\u_PH_DLY_FIFO/co0_2 ), 
    .Q0(\u_PH_DLY_FIFO/w_gcount_r3 ), .Q1(\u_PH_DLY_FIFO/w_gcount_r2 ), 
    .FCO(\u_PH_DLY_FIFO/empty_d_c ));
  SLICE4_15 SLICE4_15( .DI0(un10_wc_end_flag_0_N_2_i), .CLK(byte_clk5_c), 
    .FCI(un10_wc_end_flag_0_I_51_cry), .F0(un10_wc_end_flag_0_N_2_i), 
    .Q0(chksum_En));
  SLICE4_16 SLICE4_16( .A1(\un2_wc_end_flag.un2_wc_end_flag_cry_13_0_S1 ), 
    .C0(\lpkt_cnt[14] ), .B0(\lpkt_cnt[15] ), 
    .A0(\un2_wc_end_flag.un2_wc_end_flag_cry_13_0_S1 ), 
    .FCI(\un10_wc_end_flag_0_data_tmp[6] ), .FCO(un10_wc_end_flag_0_I_51_cry));
  SLICE4_17 SLICE4_17( .D1(\lpkt_cnt[12] ), 
    .C1(\un2_wc_end_flag.un2_wc_end_flag_cry_11_0_S1 ), .B1(\lpkt_cnt[13] ), 
    .A1(\un2_wc_end_flag.un2_wc_end_flag_cry_13_0_S0 ), .D0(\lpkt_cnt[10] ), 
    .C0(\un2_wc_end_flag.un2_wc_end_flag_cry_9_0_S1 ), .B0(\lpkt_cnt[11] ), 
    .A0(\un2_wc_end_flag.un2_wc_end_flag_cry_11_0_S0 ), 
    .FCI(\un10_wc_end_flag_0_data_tmp[4] ), 
    .FCO(\un10_wc_end_flag_0_data_tmp[6] ));
  SLICE4_18 SLICE4_18( .D1(\lpkt_cnt[8] ), 
    .C1(\un2_wc_end_flag.un2_wc_end_flag_cry_7_0_S1 ), .B1(\lpkt_cnt[9] ), 
    .A1(\un2_wc_end_flag.un2_wc_end_flag_cry_9_0_S0 ), .D0(\lpkt_cnt[6] ), 
    .C0(\un2_wc_end_flag.un2_wc_end_flag_cry_5_0_S1 ), .B0(\lpkt_cnt[7] ), 
    .A0(\un2_wc_end_flag.un2_wc_end_flag_cry_7_0_S0 ), 
    .FCI(\un10_wc_end_flag_0_data_tmp[2] ), 
    .FCO(\un10_wc_end_flag_0_data_tmp[4] ));
  SLICE4_19 SLICE4_19( .D1(\lpkt_cnt[4] ), 
    .C1(\un2_wc_end_flag.un2_wc_end_flag_cry_3_0_S1 ), .B1(\lpkt_cnt[5] ), 
    .A1(\un2_wc_end_flag.un2_wc_end_flag_cry_5_0_S0 ), .D0(\lpkt_cnt[2] ), 
    .C0(\un2_wc_end_flag.un2_wc_end_flag_cry_1_0_S1 ), .B0(\lpkt_cnt[3] ), 
    .A0(\un2_wc_end_flag.un2_wc_end_flag_cry_3_0_S0 ), 
    .FCI(\un10_wc_end_flag_0_data_tmp[0] ), 
    .FCO(\un10_wc_end_flag_0_data_tmp[2] ));
  SLICE4_20 SLICE4_20( .D1(\lpkt_cnt[0] ), .C1(\q_wc[2] ), .B1(\lpkt_cnt[1] ), 
    .A1(\un2_wc_end_flag.un2_wc_end_flag_cry_1_0_S0 ), 
    .FCO(\un10_wc_end_flag_0_data_tmp[0] ));
  SLICE4_21 SLICE4_21( .A0(\q_wc[15] ), 
    .FCI(\un2_wc_end_flag.un2_wc_end_flag_cry_12 ), 
    .F0(\un2_wc_end_flag.un2_wc_end_flag_cry_13_0_S0 ), 
    .F1(\un2_wc_end_flag.un2_wc_end_flag_cry_13_0_S1 ));
  SLICE4_22 SLICE4_22( .A1(\q_wc[14] ), .A0(\q_wc[13] ), 
    .FCI(\un2_wc_end_flag.un2_wc_end_flag_cry_10 ), 
    .F0(\un2_wc_end_flag.un2_wc_end_flag_cry_11_0_S0 ), 
    .F1(\un2_wc_end_flag.un2_wc_end_flag_cry_11_0_S1 ), 
    .FCO(\un2_wc_end_flag.un2_wc_end_flag_cry_12 ));
  SLICE4_23 SLICE4_23( .A1(\q_wc[12] ), .A0(\q_wc[11] ), 
    .FCI(\un2_wc_end_flag.un2_wc_end_flag_cry_8 ), 
    .F0(\un2_wc_end_flag.un2_wc_end_flag_cry_9_0_S0 ), 
    .F1(\un2_wc_end_flag.un2_wc_end_flag_cry_9_0_S1 ), 
    .FCO(\un2_wc_end_flag.un2_wc_end_flag_cry_10 ));
  SLICE4_24 SLICE4_24( .A1(\q_wc[10] ), .A0(\q_wc[9] ), 
    .FCI(\un2_wc_end_flag.un2_wc_end_flag_cry_6 ), 
    .F0(\un2_wc_end_flag.un2_wc_end_flag_cry_7_0_S0 ), 
    .F1(\un2_wc_end_flag.un2_wc_end_flag_cry_7_0_S1 ), 
    .FCO(\un2_wc_end_flag.un2_wc_end_flag_cry_8 ));
  SLICE4_25 SLICE4_25( .A1(\q_wc[8] ), .A0(\q_wc[7] ), 
    .FCI(\un2_wc_end_flag.un2_wc_end_flag_cry_4 ), 
    .F0(\un2_wc_end_flag.un2_wc_end_flag_cry_5_0_S0 ), 
    .F1(\un2_wc_end_flag.un2_wc_end_flag_cry_5_0_S1 ), 
    .FCO(\un2_wc_end_flag.un2_wc_end_flag_cry_6 ));
  SLICE4_26 SLICE4_26( .A1(\q_wc[6] ), .A0(\q_wc[5] ), 
    .FCI(\un2_wc_end_flag.un2_wc_end_flag_cry_2 ), 
    .F0(\un2_wc_end_flag.un2_wc_end_flag_cry_3_0_S0 ), 
    .F1(\un2_wc_end_flag.un2_wc_end_flag_cry_3_0_S1 ), 
    .FCO(\un2_wc_end_flag.un2_wc_end_flag_cry_4 ));
  SLICE4_27 SLICE4_27( .A1(\q_wc[4] ), .A0(\q_wc[3] ), 
    .FCI(\un2_wc_end_flag.un2_wc_end_flag_cry_0 ), 
    .F0(\un2_wc_end_flag.un2_wc_end_flag_cry_1_0_S0 ), 
    .F1(\un2_wc_end_flag.un2_wc_end_flag_cry_1_0_S1 ), 
    .FCO(\un2_wc_end_flag.un2_wc_end_flag_cry_2 ));
  SLICE4_28 SLICE4_28( .A1(\q_wc[2] ), 
    .FCO(\un2_wc_end_flag.un2_wc_end_flag_cry_0 ));
  SLICE4_29 SLICE4_29( .B0(\lpkt_cnt[15] ), .A0(lpkt_cnt), 
    .DI0(\lpkt_cnt_s[15] ), .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[14] ), 
    .F0(\lpkt_cnt_s[15] ), .Q0(\lpkt_cnt[15] ));
  SLICE4_30 SLICE4_30( .B1(\lpkt_cnt[14] ), .A1(lpkt_cnt), .B0(\lpkt_cnt[13] ), 
    .A0(lpkt_cnt), .DI1(\lpkt_cnt_s[14] ), .DI0(\lpkt_cnt_s[13] ), 
    .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[12] ), .F0(\lpkt_cnt_s[13] ), 
    .Q0(\lpkt_cnt[13] ), .F1(\lpkt_cnt_s[14] ), .Q1(\lpkt_cnt[14] ), 
    .FCO(\lpkt_cnt_cry[14] ));
  SLICE4_31 SLICE4_31( .B1(\lpkt_cnt[12] ), .A1(lpkt_cnt), .B0(\lpkt_cnt[11] ), 
    .A0(lpkt_cnt), .DI1(\lpkt_cnt_s[12] ), .DI0(\lpkt_cnt_s[11] ), 
    .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[10] ), .F0(\lpkt_cnt_s[11] ), 
    .Q0(\lpkt_cnt[11] ), .F1(\lpkt_cnt_s[12] ), .Q1(\lpkt_cnt[12] ), 
    .FCO(\lpkt_cnt_cry[12] ));
  SLICE4_32 SLICE4_32( .B1(\lpkt_cnt[10] ), .A1(lpkt_cnt), .B0(\lpkt_cnt[9] ), 
    .A0(lpkt_cnt), .DI1(\lpkt_cnt_s[10] ), .DI0(\lpkt_cnt_s[9] ), 
    .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[8] ), .F0(\lpkt_cnt_s[9] ), 
    .Q0(\lpkt_cnt[9] ), .F1(\lpkt_cnt_s[10] ), .Q1(\lpkt_cnt[10] ), 
    .FCO(\lpkt_cnt_cry[10] ));
  SLICE4_33 SLICE4_33( .B1(\lpkt_cnt[8] ), .A1(lpkt_cnt), .B0(\lpkt_cnt[7] ), 
    .A0(lpkt_cnt), .DI1(\lpkt_cnt_s[8] ), .DI0(\lpkt_cnt_s[7] ), 
    .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[6] ), .F0(\lpkt_cnt_s[7] ), 
    .Q0(\lpkt_cnt[7] ), .F1(\lpkt_cnt_s[8] ), .Q1(\lpkt_cnt[8] ), 
    .FCO(\lpkt_cnt_cry[8] ));
  SLICE4_34 SLICE4_34( .B1(\lpkt_cnt[6] ), .A1(lpkt_cnt), .B0(\lpkt_cnt[5] ), 
    .A0(lpkt_cnt), .DI1(\lpkt_cnt_s[6] ), .DI0(\lpkt_cnt_s[5] ), 
    .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[4] ), .F0(\lpkt_cnt_s[5] ), 
    .Q0(\lpkt_cnt[5] ), .F1(\lpkt_cnt_s[6] ), .Q1(\lpkt_cnt[6] ), 
    .FCO(\lpkt_cnt_cry[6] ));
  SLICE4_35 SLICE4_35( .B1(\lpkt_cnt[4] ), .A1(lpkt_cnt), .B0(\lpkt_cnt[3] ), 
    .A0(lpkt_cnt), .DI1(\lpkt_cnt_s[4] ), .DI0(\lpkt_cnt_s[3] ), 
    .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[2] ), .F0(\lpkt_cnt_s[3] ), 
    .Q0(\lpkt_cnt[3] ), .F1(\lpkt_cnt_s[4] ), .Q1(\lpkt_cnt[4] ), 
    .FCO(\lpkt_cnt_cry[4] ));
  SLICE4_36 SLICE4_36( .B1(\lpkt_cnt[2] ), .A1(lpkt_cnt), .B0(\lpkt_cnt[1] ), 
    .A0(lpkt_cnt), .DI1(\lpkt_cnt_s[2] ), .DI0(\lpkt_cnt_s[1] ), 
    .CLK(byte_clk5_c), .FCI(\lpkt_cnt_cry[0] ), .F0(\lpkt_cnt_s[1] ), 
    .Q0(\lpkt_cnt[1] ), .F1(\lpkt_cnt_s[2] ), .Q1(\lpkt_cnt[2] ), 
    .FCO(\lpkt_cnt_cry[2] ));
  u_PH_DLY_FIFO_fifo_pfu_0_7_14 \u_PH_DLY_FIFO/fifo_pfu_0_7.14 ( 
    .D1(\byte_data7_c[3] ), .C1(\byte_data7_c[2] ), .B1(\byte_data7_c[1] ), 
    .A1(\byte_data7_c[0] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_7 \u_PH_DLY_FIFO/fifo_pfu_0_7 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout1 ), .DI0(\u_PH_DLY_FIFO/rdataout0 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout0 ), .Q0(\byte_data7_fifo[0] ), 
    .F1(\u_PH_DLY_FIFO/rdataout1 ), .Q1(\byte_data7_fifo[1] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_7_15 \u_PH_DLY_FIFO/fifo_pfu_0_7.15 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout3 ), .DI0(\u_PH_DLY_FIFO/rdataout2 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout2 ), .Q0(\byte_data7_fifo[2] ), 
    .F1(\u_PH_DLY_FIFO/rdataout3 ), .Q1(\byte_data7_fifo[3] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_7/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_7/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_0 \u_PH_DLY_FIFO/fifo_pfu_0_0 ( 
    .D1(\byte_data7_c[31] ), .C1(\byte_data7_c[30] ), .B1(\byte_data7_c[29] ), 
    .A1(\byte_data7_c[28] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_0_1 \u_PH_DLY_FIFO/fifo_pfu_0_0.1 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout29 ), .DI0(\u_PH_DLY_FIFO/rdataout28 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout28 ), .Q0(\byte_data7_fifo[28] ), 
    .F1(\u_PH_DLY_FIFO/rdataout29 ), .Q1(\byte_data7_fifo[29] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_0_0 \u_PH_DLY_FIFO/fifo_pfu_0_0.0 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout31 ), .DI0(\u_PH_DLY_FIFO/rdataout30 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout30 ), .Q0(\byte_data7_fifo[30] ), 
    .F1(\u_PH_DLY_FIFO/rdataout31 ), .Q1(\byte_data7_fifo[31] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_0/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_0/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_1 \u_PH_DLY_FIFO/fifo_pfu_0_1 ( 
    .D1(\byte_data7_c[27] ), .C1(\byte_data7_c[26] ), .B1(\byte_data7_c[25] ), 
    .A1(\byte_data7_c[24] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_1_2 \u_PH_DLY_FIFO/fifo_pfu_0_1.2 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout25 ), .DI0(\u_PH_DLY_FIFO/rdataout24 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout24 ), .Q0(\byte_data7_fifo[24] ), 
    .F1(\u_PH_DLY_FIFO/rdataout25 ), .Q1(\byte_data7_fifo[25] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_1_3 \u_PH_DLY_FIFO/fifo_pfu_0_1.3 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout27 ), .DI0(\u_PH_DLY_FIFO/rdataout26 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout26 ), .Q0(\byte_data7_fifo[26] ), 
    .F1(\u_PH_DLY_FIFO/rdataout27 ), .Q1(\byte_data7_fifo[27] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_1/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_1/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_2_5 \u_PH_DLY_FIFO/fifo_pfu_0_2.5 ( 
    .D1(\byte_data7_c[23] ), .C1(\byte_data7_c[22] ), .B1(\byte_data7_c[21] ), 
    .A1(\byte_data7_c[20] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_2_4 \u_PH_DLY_FIFO/fifo_pfu_0_2.4 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout21 ), .DI0(\u_PH_DLY_FIFO/rdataout20 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout20 ), .Q0(\byte_data7_fifo[20] ), 
    .F1(\u_PH_DLY_FIFO/rdataout21 ), .Q1(\byte_data7_fifo[21] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_2 \u_PH_DLY_FIFO/fifo_pfu_0_2 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout23 ), .DI0(\u_PH_DLY_FIFO/rdataout22 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout22 ), .Q0(\byte_data7_fifo[22] ), 
    .F1(\u_PH_DLY_FIFO/rdataout23 ), .Q1(\byte_data7_fifo[23] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_2/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_2/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_3_6 \u_PH_DLY_FIFO/fifo_pfu_0_3.6 ( 
    .D1(\byte_data7_c[19] ), .C1(\byte_data7_c[18] ), .B1(\byte_data7_c[17] ), 
    .A1(\byte_data7_c[16] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_3 \u_PH_DLY_FIFO/fifo_pfu_0_3 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout17 ), .DI0(\u_PH_DLY_FIFO/rdataout16 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout16 ), .Q0(\byte_data7_fifo[16] ), 
    .F1(\u_PH_DLY_FIFO/rdataout17 ), .Q1(\byte_data7_fifo[17] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_3_7 \u_PH_DLY_FIFO/fifo_pfu_0_3.7 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout19 ), .DI0(\u_PH_DLY_FIFO/rdataout18 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout18 ), .Q0(\byte_data7_fifo[18] ), 
    .F1(\u_PH_DLY_FIFO/rdataout19 ), .Q1(\byte_data7_fifo[19] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_3/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_3/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_4_8 \u_PH_DLY_FIFO/fifo_pfu_0_4.8 ( 
    .D1(\byte_data7_c[15] ), .C1(\byte_data7_c[14] ), .B1(\byte_data7_c[13] ), 
    .A1(\byte_data7_c[12] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_4_9 \u_PH_DLY_FIFO/fifo_pfu_0_4.9 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout13 ), .DI0(\u_PH_DLY_FIFO/rdataout12 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout12 ), .Q0(\byte_data7_fifo[12] ), 
    .F1(\u_PH_DLY_FIFO/rdataout13 ), .Q1(\byte_data7_fifo[13] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_4 \u_PH_DLY_FIFO/fifo_pfu_0_4 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout15 ), .DI0(\u_PH_DLY_FIFO/rdataout14 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout14 ), .Q0(\byte_data7_fifo[14] ), 
    .F1(\u_PH_DLY_FIFO/rdataout15 ), .Q1(\byte_data7_fifo[15] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_4/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_4/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_5 \u_PH_DLY_FIFO/fifo_pfu_0_5 ( 
    .D1(\byte_data7_c[11] ), .C1(\byte_data7_c[10] ), .B1(\byte_data7_c[9] ), 
    .A1(\byte_data7_c[8] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_5_11 \u_PH_DLY_FIFO/fifo_pfu_0_5.11 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout9 ), .DI0(\u_PH_DLY_FIFO/rdataout8 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout8 ), .Q0(\byte_data7_fifo[8] ), 
    .F1(\u_PH_DLY_FIFO/rdataout9 ), .Q1(\byte_data7_fifo[9] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_5_10 \u_PH_DLY_FIFO/fifo_pfu_0_5.10 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout11 ), .DI0(\u_PH_DLY_FIFO/rdataout10 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout10 ), .Q0(\byte_data7_fifo[10] ), 
    .F1(\u_PH_DLY_FIFO/rdataout11 ), .Q1(\byte_data7_fifo[11] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_5/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_5/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_6_12 \u_PH_DLY_FIFO/fifo_pfu_0_6.12 ( 
    .D1(\byte_data7_c[7] ), .C1(\byte_data7_c[6] ), .B1(\byte_data7_c[5] ), 
    .A1(\byte_data7_c[4] ), .D0(\u_PH_DLY_FIFO/vcc5 ), 
    .C0(\u_PH_DLY_FIFO/wptr_2 ), .B0(\u_PH_DLY_FIFO/wptr_1 ), 
    .A0(\u_PH_DLY_FIFO/wptr_0 ), .WADO0(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD0_INT ), 
    .WADO1(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD1_INT ), 
    .WADO2(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD2_INT ), 
    .WADO3(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD3_INT ), 
    .WDO0(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD0_INT ), 
    .WDO1(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD1_INT ), 
    .WDO2(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD2_INT ), 
    .WDO3(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD3_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_6 \u_PH_DLY_FIFO/fifo_pfu_0_6 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout5 ), .DI0(\u_PH_DLY_FIFO/rdataout4 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout4 ), .Q0(\byte_data7_fifo[4] ), 
    .F1(\u_PH_DLY_FIFO/rdataout5 ), .Q1(\byte_data7_fifo[5] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD0_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD1_INT ));
  u_PH_DLY_FIFO_fifo_pfu_0_6_13 \u_PH_DLY_FIFO/fifo_pfu_0_6.13 ( 
    .D1(\u_PH_DLY_FIFO/vcc5 ), .C1(\u_PH_DLY_FIFO/rptr_2 ), 
    .B1(\u_PH_DLY_FIFO/rptr_1 ), .A1(\u_PH_DLY_FIFO/rptr_0 ), 
    .D0(\u_PH_DLY_FIFO/vcc5 ), .C0(\u_PH_DLY_FIFO/rptr_2 ), 
    .B0(\u_PH_DLY_FIFO/rptr_1 ), .A0(\u_PH_DLY_FIFO/rptr_0 ), 
    .DI1(\u_PH_DLY_FIFO/rdataout7 ), .DI0(\u_PH_DLY_FIFO/rdataout6 ), 
    .WRE(\u_PH_DLY_FIFO/wren_i ), .WCK(byte_clk5_c), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/rdataout6 ), .Q0(\byte_data7_fifo[6] ), 
    .F1(\u_PH_DLY_FIFO/rdataout7 ), .Q1(\byte_data7_fifo[7] ), 
    .WAD0(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD0_INT ), 
    .WAD1(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD1_INT ), 
    .WAD2(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD2_INT ), 
    .WAD3(\u_PH_DLY_FIFO/fifo_pfu_0_6/WAD3_INT ), 
    .WD0(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD2_INT ), 
    .WD1(\u_PH_DLY_FIFO/fifo_pfu_0_6/WD3_INT ));
  SLICE4_61 SLICE4_61( .C1(\q_ECC[4] ), .B1(\byte_data7_fifo[28] ), .A1(WC_1_En), 
    .D0(un10_wc_end_flag_0_N_2_i), .C0(q_long_pkt_indicator), .B0(WC_1_En), 
    .A0(EoTp_c), .DI0(\un2_EoTp_En_0[0] ), .M1(\EoTp_En[0] ), .CLK(byte_clk5_c), 
    .F0(\un2_EoTp_En_0[0] ), .Q0(\EoTp_En[0] ), .F1(N_180), .Q1(\EoTp_En[1] ));
  SLICE4_62 SLICE4_62( .D1(\bytepkt_cnst_31_0_.DataID_En_2_0_a2_0 ), 
    .C1(\PH_cnt[3] ), .B1(\PH_cnt[2] ), .A1(N_196), .D0(short_en_c), 
    .C0(q_short_en), .B0(q_long_en), .A0(long_en_c), .DI0(N_196), .CE(N_98), 
    .CLK(byte_clk5_c), .F0(N_196), .Q0(PH_En), .F1(N_98));
  SLICE4_63 SLICE4_63( .B1(\PH_cnt[1] ), .A1(\PH_cnt[0] ), .B0(\PH_cnt[0] ), 
    .A0(PH_En), .DI1(N_169_i), .DI0(\un7_PH_cnt_0_a2[0] ), .CLK(byte_clk5_c), 
    .F0(\un7_PH_cnt_0_a2[0] ), .Q0(\PH_cnt[0] ), .F1(N_169_i), 
    .Q1(\PH_cnt[1] ));
  SLICE4_64 SLICE4_64( .D1(\PH_cnt[3] ), .C1(\PH_cnt[2] ), .B1(PH_En), 
    .A1(N_162), .C0(\PH_cnt[0] ), .B0(\PH_cnt[1] ), .A0(\PH_cnt[2] ), 
    .DI1(N_94_i), .DI0(N_171_i_i), .CLK(byte_clk5_c), .F0(N_171_i_i), 
    .Q0(\PH_cnt[2] ), .F1(N_94_i), .Q1(\PH_cnt[3] ));
  SLICE4_65 SLICE4_65( .B1(\PH_cnt[1] ), .A1(\PH_cnt[0] ), .D0(\PH_cnt[0] ), 
    .C0(\PH_cnt[1] ), .B0(\PH_cnt[2] ), .A0(\PH_cnt[3] ), .DI0(DataID_En_2), 
    .CLK(byte_clk5_c), .F0(DataID_En_2), .Q0(WC_1_En), 
    .F1(\bytepkt_cnst_31_0_.DataID_En_2_0_a2_0 ));
  SLICE4_66 SLICE4_66( .B1(N_470), .A1(\EoTp_En[1] ), .D0(q_chksum_En), 
    .C0(hsSync_En), .B0(N_470), .A0(\EoTp_En[1] ), .DI0(N_310_i), 
    .CLK(byte_clk5_c), .F0(N_310_i), .Q0(bytepkt_en_c), .F1(N_429));
  SLICE4_67 SLICE4_67( .B1(\PH_cnt[1] ), .A1(\PH_cnt[0] ), .D0(\PH_cnt[3] ), 
    .C0(\PH_cnt[2] ), .B0(\PH_cnt[1] ), .A0(\PH_cnt[0] ), .DI0(hsSync_En_2), 
    .CLK(byte_clk5_c), .F0(hsSync_En_2), .Q0(hsSync_En), .F1(N_162));
  SLICE4_68 SLICE4_68( .B1(un10_wc_end_flag_0_N_2_i), .A1(un2_lpkt_cnt_En_0_a2), 
    .D0(q_long_pkt_indicator), .C0(\PH_cnt[3] ), .B0(\PH_cnt[2] ), .A0(N_162), 
    .DI0(un2_lpkt_cnt_En_0_a2), .CE(N_91), .CLK(byte_clk5_c), 
    .F0(un2_lpkt_cnt_En_0_a2), .Q0(lpkt_cnt), .F1(N_91));
  SLICE4_70 SLICE4_70( .D1(\bytepkt_cnst_31_0_.un87_q_ECC_0_a2_4 ), 
    .C1(\bytepkt_cnst_31_0_.un87_q_ECC_0_a2_3 ), .B1(N_173_i), .A1(N_172_i), 
    .D0(\bytepkt_cnst_31_0_.un108_q_ECC_0_a2_6 ), 
    .C0(\bytepkt_cnst_31_0_.un108_q_ECC_0_a2_5 ), 
    .B0(\bytepkt_cnst_31_0_.un108_q_ECC_0_a2_4 ), .A0(N_157_i), 
    .DI1(un87_q_ECC_0_a2), .DI0(un108_q_ECC_0_a2), .CE(un5_q_ECC_0), 
    .CLK(byte_clk5_c), .F0(un108_q_ECC_0_a2), .Q0(\q_ECC[0] ), 
    .F1(un87_q_ECC_0_a2), .Q1(\q_ECC[1] ));
  SLICE4_71 SLICE4_71( .D1(un7_q_ECC_3), 
    .C1(\bytepkt_cnst_31_0_.un47_q_ECC_0_a2_5 ), 
    .B1(\bytepkt_cnst_31_0_.un47_q_ECC_0_a2_4 ), .A1(N_173_i), 
    .D0(un7_q_ECC_2), .C0(\bytepkt_cnst_31_0_.un67_q_ECC_0_a2_5 ), 
    .B0(\bytepkt_cnst_31_0_.un67_q_ECC_0_a2_4 ), .A0(N_173_i), 
    .DI1(un47_q_ECC_0_a2), .DI0(un67_q_ECC_0_a2), .CE(un5_q_ECC_0), 
    .CLK(byte_clk5_c), .F0(un67_q_ECC_0_a2), .Q0(\q_ECC[2] ), 
    .F1(un47_q_ECC_0_a2), .Q1(\q_ECC[3] ));
  SLICE4_72 SLICE4_72( .D1(un7_q_ECC_3), .C1(un7_q_ECC_2), 
    .B1(\bytepkt_cnst_31_0_.un7_q_ECC_0_a2_4 ), .A1(N_172_i), .D0(un7_q_ECC_5), 
    .C0(\bytepkt_cnst_31_0_.un27_q_ECC_0_a2_5 ), 
    .B0(\bytepkt_cnst_31_0_.un27_q_ECC_0_a2_4 ), .A0(N_172_i), .DI1(un7_q_ECC), 
    .DI0(un27_q_ECC), .CE(un5_q_ECC_0), .CLK(byte_clk5_c), .F0(un27_q_ECC), 
    .Q0(\q_ECC[4] ), .F1(un7_q_ECC), .Q1(\q_ECC[5] ));
  SLICE4_75 SLICE4_75( .B1(q_long_en), .A1(q2_short_en), .B0(short_en_c), 
    .A0(q_short_en), .DI0(N_453_i), .CE(N_196), .CLK(byte_clk5_c), .F0(N_453_i), 
    .Q0(q_long_pkt_indicator), .F1(un5_q_ECC_0));
  u_PH_DLY_FIFO_SLICE4_76 \u_PH_DLY_FIFO/SLICE4_76 ( 
    .B1(\u_PH_DLY_FIFO/rcount_2 ), .A1(\u_PH_DLY_FIFO/rcount_1 ), 
    .B0(\u_PH_DLY_FIFO/rcount_1 ), .A0(\u_PH_DLY_FIFO/rcount_0 ), 
    .DI1(\u_PH_DLY_FIFO/r_gdata_1 ), .DI0(\u_PH_DLY_FIFO/r_gdata_0 ), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/r_gdata_0 ), .Q0(\u_PH_DLY_FIFO/r_gcount_0 ), 
    .F1(\u_PH_DLY_FIFO/r_gdata_1 ), .Q1(\u_PH_DLY_FIFO/r_gcount_1 ));
  u_PH_DLY_FIFO_SLICE4_77 \u_PH_DLY_FIFO/SLICE4_77 ( 
    .B1(\u_PH_DLY_FIFO/w_gcount_r22 ), .A1(\u_PH_DLY_FIFO/w_gcount_r23 ), 
    .B0(\u_PH_DLY_FIFO/rcount_3 ), .A0(\u_PH_DLY_FIFO/rcount_2 ), 
    .DI0(\u_PH_DLY_FIFO/r_gdata_2 ), .M1(\u_PH_DLY_FIFO/rcount_3 ), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/r_gdata_2 ), .Q0(\u_PH_DLY_FIFO/r_gcount_2 ), 
    .F1(\u_PH_DLY_FIFO/wcount_r2 ), .Q1(\u_PH_DLY_FIFO/r_gcount_3 ));
  u_PH_DLY_FIFO_SLICE4_84 \u_PH_DLY_FIFO/SLICE4_84 ( 
    .B1(\u_PH_DLY_FIFO/wcount_2 ), .A1(\u_PH_DLY_FIFO/wcount_1 ), 
    .B0(\u_PH_DLY_FIFO/wcount_1 ), .A0(\u_PH_DLY_FIFO/wcount_0 ), 
    .DI1(\u_PH_DLY_FIFO/w_gdata_1 ), .DI0(\u_PH_DLY_FIFO/w_gdata_0 ), 
    .CE(\u_PH_DLY_FIFO/wren_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/w_gdata_0 ), .Q0(\u_PH_DLY_FIFO/w_gcount_0 ), 
    .F1(\u_PH_DLY_FIFO/w_gdata_1 ), .Q1(\u_PH_DLY_FIFO/w_gcount_1 ));
  u_PH_DLY_FIFO_SLICE4_85 \u_PH_DLY_FIFO/SLICE4_85 ( 
    .B1(\u_PH_DLY_FIFO/r_gcount_w22 ), .A1(\u_PH_DLY_FIFO/r_gcount_w23 ), 
    .B0(\u_PH_DLY_FIFO/wcount_3 ), .A0(\u_PH_DLY_FIFO/wcount_2 ), 
    .DI0(\u_PH_DLY_FIFO/w_gdata_2 ), .M1(\u_PH_DLY_FIFO/wcount_3 ), 
    .CE(\u_PH_DLY_FIFO/wren_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/w_gdata_2 ), .Q0(\u_PH_DLY_FIFO/w_gcount_2 ), 
    .F1(\u_PH_DLY_FIFO/rcount_w2 ), .Q1(\u_PH_DLY_FIFO/w_gcount_3 ));
  SLICE4_91 SLICE4_91( .D1(\q_wc[14] ), .C1(\q_dt[5] ), .B1(\q_dt[2] ), 
    .A1(\q_dt[0] ), .M1(\u_PH_DLY_FIFO/wcount_3 ), 
    .M0(\u_PH_DLY_FIFO/wcount_2 ), .CE(\u_PH_DLY_FIFO/wren_i ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), .F0(\u_PH_DLY_FIFO/vcc5 ), 
    .Q0(\u_PH_DLY_FIFO/wptr_2 ), .F1(\bytepkt_cnst_31_0_.un67_q_ECC_0_a2_4 ), 
    .Q1(\u_PH_DLY_FIFO/wptr_3 ));
  SLICE4_92 SLICE4_92( .D1(chksum_En), .C1(N_150), .B1(N_149), .A1(\EoTp_En[1] ), 
    .D0(N_149), .C0(chksum_En), .B0(\EoTp_En[0] ), .A0(N_153), .F0(N_164), 
    .F1(N_153));
  SLICE4_93 SLICE4_93( .D1(N_180), .C1(N_151), .B1(lpkt_cnt), .A1(WC_1_En), 
    .D0(WC_1_En), .C0(hsSync_En), .B0(N_470), .A0(\EoTp_En[1] ), .F0(N_151), 
    .F1(\bytepkt_2[28] ));
  SLICE4_94 SLICE4_94( .D1(\q_wc[13] ), .C1(WC_1_En), .B1(N_306), .A1(N_151), 
    .C0(WC_1_En), .B0(lpkt_cnt), .A0(\byte_data7_fifo[21] ), .F0(N_306), 
    .F1(\bytepkt_2[21] ));
  SLICE4_95 SLICE4_95( .D1(\q_wc[12] ), .C1(WC_1_En), .B1(N_303), .A1(N_151), 
    .C0(WC_1_En), .B0(lpkt_cnt), .A0(\byte_data7_fifo[20] ), .F0(N_303), 
    .F1(\bytepkt_2[20] ));
  SLICE4_96 SLICE4_96( .D1(WC_1_En), .C1(hsSync_En), .B1(N_197), .A1(N_427), 
    .D0(WC_1_En), .C0(lpkt_cnt), .B0(\EoTp_En[1] ), .A0(chksum_En), .F0(N_427), 
    .F1(\bytepkt_2[19] ));
  SLICE4_97 SLICE4_97( .D1(WC_1_En), .C1(lpkt_cnt), .B1(\EoTp_En[0] ), 
    .A1(chksum_En), .D0(WC_1_En), .C0(hsSync_En), .B0(\EoTp_En[1] ), 
    .A0(N_470), .F0(N_155), .F1(N_470));
  SLICE4_98 SLICE4_98( .D1(N_338), .C1(N_149), .B1(\EoTp_En[1] ), 
    .A1(\EoTp_En[0] ), .D0(chksum_En), .C0(N_189), .B0(N_156), .A0(N_149), 
    .F0(N_69_i), .F1(N_156));
  SLICE4_99 SLICE4_99( .D1(N_181), .C1(N_151), .B1(lpkt_cnt), .A1(WC_1_En), 
    .C0(\q_ECC[5] ), .B0(\byte_data7_fifo[29] ), .A0(WC_1_En), .F0(N_181), 
    .F1(\bytepkt_2[29] ));
  SLICE4_100 SLICE4_100( .D1(N_194), .C1(N_164), .B1(lpkt_cnt), .A1(WC_1_En), 
    .C0(\q_ECC[1] ), .B0(\byte_data7_fifo[25] ), .A0(WC_1_En), .F0(N_194), 
    .F1(N_80_i));
  SLICE4_101 SLICE4_101( .D1(N_193), .C1(N_164), .B1(lpkt_cnt), .A1(WC_1_En), 
    .C0(\q_ECC[2] ), .B0(\byte_data7_fifo[26] ), .A0(WC_1_En), .F0(N_193), 
    .F1(N_82_i));
  SLICE4_102 SLICE4_102( .D1(N_191), .C1(\EoTp_En[0] ), .B1(lpkt_cnt), 
    .A1(WC_1_En), .C0(\q_wc[11] ), .B0(\byte_data7_fifo[19] ), .A0(WC_1_En), 
    .F0(N_191), .F1(N_197));
  SLICE4_103 SLICE4_103( .B1(hsSync_En), .A1(WC_1_En), .D0(\EoTp_En[1] ), 
    .C0(N_338), .B0(N_470), .A0(q_chksum_En), .F0(N_159), .F1(N_338));
  SLICE4_104 SLICE4_104( .D1(\q_chksum[4] ), .C1(N_463), .B1(N_208), .A1(N_207), 
    .C0(WC_1_En), .B0(lpkt_cnt), .A0(chksum_En), .F0(N_463), 
    .F1(\bytepkt_2[4] ));
  SLICE4_105 SLICE4_105( .D1(\q_chksum[0] ), .C1(N_463), .B1(N_205), .A1(N_153), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[0] ), .A0(\q_dt[0] ), 
    .F0(N_205), .F1(N_35_i));
  SLICE4_106 SLICE4_106( .D1(\q_chksum[5] ), .C1(N_463), .B1(N_210), .A1(N_207), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[5] ), .A0(\q_dt[5] ), 
    .F0(N_210), .F1(\bytepkt_2[5] ));
  SLICE4_107 SLICE4_107( .D1(\q_chksum[13] ), .C1(N_463), .B1(N_242), .A1(N_207), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[13] ), .A0(\q_wc[5] ), 
    .F0(N_242), .F1(\bytepkt_2[13] ));
  SLICE4_108 SLICE4_108( .D1(\q_chksum[15] ), .C1(N_463), .B1(N_246), .A1(N_207), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[15] ), .A0(\q_wc[7] ), 
    .F0(N_246), .F1(\bytepkt_2[15] ));
  SLICE4_109 SLICE4_109( .D1(\q_chksum[1] ), .C1(N_463), .B1(N_313), .A1(N_153), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[1] ), .A0(\q_dt[1] ), 
    .F0(N_313), .F1(N_53_i));
  SLICE4_110 SLICE4_110( .D1(\q_chksum[2] ), .C1(N_463), .B1(N_315), .A1(N_153), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[2] ), .A0(\q_dt[2] ), 
    .F0(N_315), .F1(N_55_i));
  SLICE4_111 SLICE4_111( .D1(\q_chksum[8] ), .C1(N_463), .B1(N_323), .A1(N_155), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[8] ), .A0(\q_wc[0] ), 
    .F0(N_323), .F1(N_60_i));
  SLICE4_112 SLICE4_112( .D1(\q_chksum[10] ), .C1(N_463), .B1(N_327), .A1(N_159), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[10] ), .A0(\q_wc[2] ), 
    .F0(N_327), .F1(N_64_i));
  SLICE4_113 SLICE4_113( .D1(\q_chksum[12] ), .C1(N_463), .B1(N_329), .A1(N_207), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[12] ), .A0(\q_wc[4] ), 
    .F0(N_329), .F1(\bytepkt_2[12] ));
  SLICE4_114 SLICE4_114( .D1(\EoTp_En[0] ), .C1(N_463), .B1(N_151), .A1(N_346), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[27] ), .A0(\q_ECC[3] ), 
    .F0(N_346), .F1(\bytepkt_2[27] ));
  SLICE4_115 SLICE4_115( .D1(N_463), .C1(N_342), .B1(N_156), .A1(\EoTp_En[0] ), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[24] ), .A0(\q_ECC[0] ), 
    .F0(N_342), .F1(N_78_i));
  SLICE4_116 SLICE4_116( .D1(\q_chksum[9] ), .C1(N_463), .B1(N_325), .A1(N_159), 
    .D0(lpkt_cnt), .C0(WC_1_En), .B0(\byte_data7_fifo[9] ), .A0(\q_wc[1] ), 
    .F0(N_325), .F1(N_62_i));
  SLICE4_117 SLICE4_117( .D1(\q_wc[14] ), .C1(lpkt_cnt), 
    .B1(\byte_data7_fifo[22] ), .A1(WC_1_En), .D0(\q_vc[0] ), 
    .C0(\bytepkt_cnst_31_0_.bytepkt_2_i_0[22] ), .B0(N_463), .A0(N_164), 
    .F0(N_76_i), .F1(\bytepkt_cnst_31_0_.bytepkt_2_i_0[22] ));
  SLICE4_118 SLICE4_118( .D1(\q_vc[0] ), .C1(\byte_data7_fifo[6] ), .B1(N_466), 
    .A1(N_163), .D0(\q_chksum[6] ), .C0(\bytepkt_cnst_31_0_.bytepkt_2_i_0[6] ), 
    .B0(N_463), .A0(N_159), .F0(N_58_i), 
    .F1(\bytepkt_cnst_31_0_.bytepkt_2_i_0[6] ));
  SLICE4_119 SLICE4_119( .D1(q_chksum_En), .C1(chksum_En), .B1(N_188), 
    .A1(N_149), .D0(\q_chksum[14] ), 
    .C0(\bytepkt_cnst_31_0_.bytepkt_2_i_0[14] ), .B0(N_463), .A0(N_153), 
    .F0(N_67_i), .F1(\bytepkt_cnst_31_0_.bytepkt_2_i_0[14] ));
  SLICE4_120 SLICE4_120( .D1(lpkt_cnt), .C1(hsSync_En), 
    .B1(\bytepkt_cnst_31_0_.bytepkt_2_0_a2_1[4] ), .A1(WC_1_En), 
    .D0(\q_chksum[7] ), .C0(\bytepkt_cnst_31_0_.bytepkt_2_0_0[7] ), .B0(N_463), 
    .A0(N_207), .F0(\bytepkt_2[7] ), .F1(N_207));
  SLICE4_121 SLICE4_121( .D1(\q_wc[9] ), .C1(lpkt_cnt), 
    .B1(\byte_data7_fifo[17] ), .A1(WC_1_En), 
    .C0(\bytepkt_cnst_31_0_.bytepkt_2_i_0[17] ), .B0(N_463), .A0(N_156), 
    .F0(N_71_i), .F1(\bytepkt_cnst_31_0_.bytepkt_2_i_0[17] ));
  SLICE4_122 SLICE4_122( .B1(lpkt_cnt), .A1(WC_1_En), .D0(chksum_En), .C0(N_190), 
    .B0(N_156), .A0(N_149), .F0(N_73_i), .F1(N_149));
  SLICE4_123 SLICE4_123( .B1(lpkt_cnt), .A1(WC_1_En), .D0(hsSync_En), 
    .C0(\byte_data7_fifo[30] ), .B0(N_466), .A0(N_429), .F0(\bytepkt_2[30] ), 
    .F1(N_466));
  SLICE4_124 SLICE4_124( .D1(\q_chksum[11] ), .C1(chksum_En), .B1(N_177), 
    .A1(N_149), .D0(q_chksum_En), .C0(\bytepkt_cnst_31_0_.bytepkt_2_0_0[11] ), 
    .B0(N_427), .A0(N_150), .F0(\bytepkt_2[11] ), 
    .F1(\bytepkt_cnst_31_0_.bytepkt_2_0_0[11] ));
  SLICE4_125 SLICE4_125( .D1(chksum_En), .C1(\EoTp_En[0] ), .B1(lpkt_cnt), 
    .A1(WC_1_En), .D0(\q_vc[1] ), .C0(\bytepkt_cnst_31_0_.bytepkt_2_0_0[23] ), 
    .B0(N_428), .A0(N_151), .F0(\bytepkt_2[23] ), .F1(N_428));
  SLICE4_126 SLICE4_126( .D1(chksum_En), .C1(\q_chksum[3] ), .B1(lpkt_cnt), 
    .A1(WC_1_En), .D0(\bytepkt_cnst_31_0_.bytepkt_2_0_0[3] ), .C0(N_427), 
    .B0(N_319), .A0(N_150), .F0(\bytepkt_2[3] ), .F1(N_319));
  SLICE4_127 SLICE4_127( .D1(lpkt_cnt), .C1(chksum_En), .B1(WC_1_En), 
    .A1(\EoTp_En[0] ), .D0(\q_vc[1] ), .C0(\byte_data7_fifo[7] ), .B0(N_466), 
    .A0(N_163), .F0(\bytepkt_cnst_31_0_.bytepkt_2_0_0[7] ), .F1(N_163));
  SLICE4_128 SLICE4_128( .B1(\q_wc[8] ), .A1(\q_wc[7] ), .D0(un7_q_ECC_5), 
    .C0(\q_wc[13] ), .B0(\q_wc[2] ), 
    .A0(\bytepkt_cnst_31_0_.un7_q_ECC_0_a2_1 ), 
    .F0(\bytepkt_cnst_31_0_.un7_q_ECC_0_a2_4 ), 
    .F1(\bytepkt_cnst_31_0_.un7_q_ECC_0_a2_1 ));
  u_PH_DLY_FIFO_SLICE4_129 \u_PH_DLY_FIFO/SLICE4_129 ( 
    .C1(\u_PH_DLY_FIFO/wptr_3 ), .B1(\u_PH_DLY_FIFO/wcount_3 ), 
    .A1(\u_PH_DLY_FIFO/r_gcount_w23 ), .C0(\u_PH_DLY_FIFO/wptr_3 ), 
    .B0(\u_PH_DLY_FIFO/wcount_3 ), .A0(\u_PH_DLY_FIFO/r_gcount_w23 ), 
    .M1(\u_PH_DLY_FIFO/rcount_2 ), .M0(\u_PH_DLY_FIFO/rcount_3 ), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/full_cmp_clr ), .Q0(\u_PH_DLY_FIFO/rptr_3 ), 
    .F1(\u_PH_DLY_FIFO/full_cmp_set ), .Q1(\u_PH_DLY_FIFO/rptr_2 ));
  u_PH_DLY_FIFO_SLICE4_130 \u_PH_DLY_FIFO/SLICE4_130 ( 
    .C1(\u_PH_DLY_FIFO/w_gcount_r21 ), .B1(\u_PH_DLY_FIFO/w_gcount_r22 ), 
    .A1(\u_PH_DLY_FIFO/w_gcount_r23 ), .D0(\u_PH_DLY_FIFO/w_gcount_r20 ), 
    .C0(\u_PH_DLY_FIFO/w_gcount_r21 ), .B0(\u_PH_DLY_FIFO/w_gcount_r22 ), 
    .A0(\u_PH_DLY_FIFO/w_gcount_r23 ), .M1(\u_PH_DLY_FIFO/r_gcount_2 ), 
    .M0(\u_PH_DLY_FIFO/r_gcount_3 ), .LSR(un1_q_bytepkt_en_0), 
    .CLK(byte_clk5_c), .F0(\u_PH_DLY_FIFO/w_g2b_xor_cluster_0 ), 
    .Q0(\u_PH_DLY_FIFO/r_gcount_w3 ), .F1(\u_PH_DLY_FIFO/wcount_r1 ), 
    .Q1(\u_PH_DLY_FIFO/r_gcount_w2 ));
  u_PH_DLY_FIFO_SLICE4_131 \u_PH_DLY_FIFO/SLICE4_131 ( 
    .C1(\u_PH_DLY_FIFO/r_gcount_w21 ), .B1(\u_PH_DLY_FIFO/r_gcount_w22 ), 
    .A1(\u_PH_DLY_FIFO/r_gcount_w23 ), .D0(\u_PH_DLY_FIFO/r_gcount_w20 ), 
    .C0(\u_PH_DLY_FIFO/r_gcount_w21 ), .B0(\u_PH_DLY_FIFO/r_gcount_w22 ), 
    .A0(\u_PH_DLY_FIFO/r_gcount_w23 ), .M1(\u_PH_DLY_FIFO/wcount_0 ), 
    .M0(\u_PH_DLY_FIFO/wcount_1 ), .CE(\u_PH_DLY_FIFO/wren_i ), 
    .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/r_g2b_xor_cluster_0 ), .Q0(\u_PH_DLY_FIFO/wptr_1 ), 
    .F1(\u_PH_DLY_FIFO/rcount_w1 ), .Q1(\u_PH_DLY_FIFO/wptr_0 ));
  u_PH_DLY_FIFO_SLICE4_132 \u_PH_DLY_FIFO/SLICE4_132 ( 
    .C1(\u_PH_DLY_FIFO/rptr_3 ), .B1(\u_PH_DLY_FIFO/rcount_3 ), 
    .A1(\u_PH_DLY_FIFO/w_gcount_r23 ), .C0(\u_PH_DLY_FIFO/rptr_3 ), 
    .B0(\u_PH_DLY_FIFO/rcount_3 ), .A0(\u_PH_DLY_FIFO/w_gcount_r23 ), 
    .M1(\u_PH_DLY_FIFO/rcount_0 ), .M0(\u_PH_DLY_FIFO/rcount_1 ), 
    .CE(\u_PH_DLY_FIFO/rden_i ), .LSR(un1_q_bytepkt_en_0), .CLK(byte_clk5_c), 
    .F0(\u_PH_DLY_FIFO/empty_cmp_set ), .Q0(\u_PH_DLY_FIFO/rptr_1 ), 
    .F1(\u_PH_DLY_FIFO/empty_cmp_clr ), .Q1(\u_PH_DLY_FIFO/rptr_0 ));
  SLICE4_133 SLICE4_133( .B1(\q_wc[13] ), .A1(\q_wc[12] ), .C0(\q_wc[12] ), 
    .B0(\q_wc[13] ), .A0(\q_dt[3] ), .F0(N_173_i), .F1(N_157_i));
  SLICE4_134 SLICE4_134( .D1(\q_wc[15] ), .C1(lpkt_cnt), 
    .B1(\byte_data7_fifo[23] ), .A1(WC_1_En), .D0(lpkt_cnt), .C0(WC_1_En), 
    .B0(\byte_data7_fifo[4] ), .A0(\q_dt[4] ), .F0(N_208), 
    .F1(\bytepkt_cnst_31_0_.bytepkt_2_0_0[23] ));
  SLICE4_135 SLICE4_135( .D1(\q_dt[3] ), .C1(lpkt_cnt), .B1(\byte_data7_fifo[3] ), 
    .A1(WC_1_En), .D0(WC_1_En), .C0(lpkt_cnt), .B0(N_151), 
    .A0(\byte_data7_fifo[31] ), .F0(\bytepkt_2[31] ), 
    .F1(\bytepkt_cnst_31_0_.bytepkt_2_0_0[3] ));
  SLICE4_136 SLICE4_136( .D1(q_chksum_En), .C1(chksum_En), .B1(\EoTp_En[1] ), 
    .A1(\EoTp_En[0] ), .D0(chksum_En), .C0(N_338), .B0(N_149), 
    .A0(\EoTp_En[0] ), .F0(N_150), 
    .F1(\bytepkt_cnst_31_0_.bytepkt_2_0_a2_1[4] ));
  SLICE4_137 SLICE4_137( .D1(\q_wc[15] ), .C1(\q_wc[14] ), .B1(\q_dt[1] ), 
    .A1(\q_dt[0] ), .C0(\q_wc[15] ), .B0(\q_wc[14] ), .A0(\q_wc[9] ), 
    .F0(N_172_i), .F1(\bytepkt_cnst_31_0_.un108_q_ECC_0_a2_6 ));
  SLICE4_138 SLICE4_138( .D1(\q_wc[5] ), .C1(\q_dt[5] ), .B1(\q_dt[4] ), 
    .A1(\q_dt[2] ), .D0(\q_wc[1] ), .C0(\q_wc[0] ), .B0(\q_dt[5] ), 
    .A0(\q_dt[4] ), .F0(\bytepkt_cnst_31_0_.un27_q_ECC_0_a2_4 ), 
    .F1(\bytepkt_cnst_31_0_.un108_q_ECC_0_a2_4 ));
  SLICE4_139 SLICE4_139( .D1(\q_wc[8] ), .C1(\q_wc[3] ), .B1(\q_wc[2] ), 
    .A1(\q_vc[1] ), .D0(\q_wc[12] ), .C0(\q_wc[8] ), .B0(\q_vc[1] ), 
    .A0(\q_vc[0] ), .F0(\bytepkt_cnst_31_0_.un27_q_ECC_0_a2_5 ), 
    .F1(\bytepkt_cnst_31_0_.un108_q_ECC_0_a2_5 ));
  SLICE4_140 SLICE4_140( .B1(q_bytepkt_en), .A1(bytepkt_en_c), 
    .B0(\u_PH_DLY_FIFO/Empty ), .A0(bytepkt_en_c), .M1(bytepkt_en_c), 
    .M0(q_short_en), .CLK(byte_clk5_c), .F0(\u_PH_DLY_FIFO/rden_i ), 
    .Q0(q2_short_en), .F1(un1_q_bytepkt_en_0), .Q1(q_bytepkt_en));
  SLICE4_141 SLICE4_141( .C1(q_short_en), .B1(q_long_en), .A1(long_en_c), 
    .B0(\u_PH_DLY_FIFO/Full ), .A0(long_en_c), .M0(chksum_En), 
    .CLK(byte_clk5_c), .F0(\u_PH_DLY_FIFO/wren_i ), .Q0(q_chksum_En), 
    .F1(N_347_i));
  SLICE4_142 SLICE4_142( .D1(\q_wc[2] ), .C1(\q_dt[4] ), .B1(\q_dt[1] ), 
    .A1(\q_dt[0] ), .D0(\q_wc[1] ), .C0(\q_wc[0] ), .B0(\q_dt[2] ), 
    .A0(\q_dt[1] ), .F0(\bytepkt_cnst_31_0_.un47_q_ECC_0_a2_4 ), 
    .F1(\bytepkt_cnst_31_0_.un87_q_ECC_0_a2_4 ));
  SLICE4_143 SLICE4_143( .B1(\q_wc[11] ), .A1(\q_wc[10] ), .D0(\q_wc[15] ), 
    .C0(\q_wc[11] ), .B0(\q_wc[7] ), .A0(\q_vc[1] ), 
    .F0(\bytepkt_cnst_31_0_.un47_q_ECC_0_a2_5 ), .F1(un7_q_ECC_5));
  SLICE4_144 SLICE4_144( .C1(\q_wc[10] ), .B1(\byte_data7_fifo[18] ), 
    .A1(WC_1_En), .D0(\q_wc[10] ), .C0(\q_wc[7] ), .B0(\q_wc[1] ), 
    .A0(\q_vc[0] ), .F0(\bytepkt_cnst_31_0_.un67_q_ECC_0_a2_5 ), .F1(N_190));
  SLICE4_145 SLICE4_145( .B1(\q_wc[6] ), .A1(\q_wc[5] ), .D0(\q_wc[6] ), 
    .C0(\q_wc[4] ), .B0(\q_wc[0] ), .A0(\q_vc[0] ), 
    .F0(\bytepkt_cnst_31_0_.un87_q_ECC_0_a2_3 ), .F1(un7_q_ECC_3));
  SLICE4_146 SLICE4_146( .C1(\q_wc[3] ), .B1(\byte_data7_fifo[11] ), .A1(WC_1_En), 
    .C0(\q_wc[8] ), .B0(\byte_data7_fifo[16] ), .A0(WC_1_En), .F0(N_189), 
    .F1(N_177));
  SLICE4_147 SLICE4_147( .C1(\q_wc[6] ), .B1(\byte_data7_fifo[14] ), .A1(WC_1_En), 
    .B0(\q_wc[4] ), .A0(\q_wc[3] ), .F0(un7_q_ECC_2), .F1(N_188));
  bytepkt_en bytepkt_en_I( .PADDO(bytepkt_en_c), .bytepkt_en(bytepkt_en));
  reset_n6 reset_n6_I( .PADDI(reset_n6_c), .reset_n6(reset_n));
  EoTp EoTp_I( .PADDI(EoTp_c), .EoTp(EoTp));
  bytepkt_31_ \bytepkt[31]_I ( .IOLDO(\bytepkt_c[31] ), 
    .bytepkt31(bytepkt[31]));
  bytepkt_31__MGIOL \bytepkt[31]_MGIOL ( .IOLDO(\bytepkt_c[31] ), 
    .OPOS(\bytepkt_2[31] ), .CLK(byte_clk5_c));
  bytepkt_30_ \bytepkt[30]_I ( .IOLDO(\bytepkt_c[30] ), 
    .bytepkt30(bytepkt[30]));
  bytepkt_30__MGIOL \bytepkt[30]_MGIOL ( .IOLDO(\bytepkt_c[30] ), 
    .OPOS(\bytepkt_2[30] ), .CLK(byte_clk5_c));
  bytepkt_29_ \bytepkt[29]_I ( .IOLDO(\bytepkt_c[29] ), 
    .bytepkt29(bytepkt[29]));
  bytepkt_29__MGIOL \bytepkt[29]_MGIOL ( .IOLDO(\bytepkt_c[29] ), 
    .OPOS(\bytepkt_2[29] ), .CLK(byte_clk5_c));
  bytepkt_28_ \bytepkt[28]_I ( .IOLDO(\bytepkt_c[28] ), 
    .bytepkt28(bytepkt[28]));
  bytepkt_28__MGIOL \bytepkt[28]_MGIOL ( .IOLDO(\bytepkt_c[28] ), 
    .OPOS(\bytepkt_2[28] ), .CLK(byte_clk5_c));
  bytepkt_27_ \bytepkt[27]_I ( .IOLDO(\bytepkt_c[27] ), 
    .bytepkt27(bytepkt[27]));
  bytepkt_27__MGIOL \bytepkt[27]_MGIOL ( .IOLDO(\bytepkt_c[27] ), 
    .OPOS(\bytepkt_2[27] ), .CLK(byte_clk5_c));
  bytepkt_26_ \bytepkt[26]_I ( .IOLDO(\bytepkt_c[26] ), 
    .bytepkt26(bytepkt[26]));
  bytepkt_26__MGIOL \bytepkt[26]_MGIOL ( .IOLDO(\bytepkt_c[26] ), 
    .OPOS(N_82_i), .CLK(byte_clk5_c));
  bytepkt_25_ \bytepkt[25]_I ( .IOLDO(\bytepkt_c[25] ), 
    .bytepkt25(bytepkt[25]));
  bytepkt_25__MGIOL \bytepkt[25]_MGIOL ( .IOLDO(\bytepkt_c[25] ), 
    .OPOS(N_80_i), .CLK(byte_clk5_c));
  bytepkt_24_ \bytepkt[24]_I ( .IOLDO(\bytepkt_c[24] ), 
    .bytepkt24(bytepkt[24]));
  bytepkt_24__MGIOL \bytepkt[24]_MGIOL ( .IOLDO(\bytepkt_c[24] ), 
    .OPOS(N_78_i), .CLK(byte_clk5_c));
  bytepkt_23_ \bytepkt[23]_I ( .IOLDO(\bytepkt_c[23] ), 
    .bytepkt23(bytepkt[23]));
  bytepkt_23__MGIOL \bytepkt[23]_MGIOL ( .IOLDO(\bytepkt_c[23] ), 
    .OPOS(\bytepkt_2[23] ), .CLK(byte_clk5_c));
  bytepkt_22_ \bytepkt[22]_I ( .IOLDO(\bytepkt_c[22] ), 
    .bytepkt22(bytepkt[22]));
  bytepkt_22__MGIOL \bytepkt[22]_MGIOL ( .IOLDO(\bytepkt_c[22] ), 
    .OPOS(N_76_i), .CLK(byte_clk5_c));
  bytepkt_21_ \bytepkt[21]_I ( .IOLDO(\bytepkt_c[21] ), 
    .bytepkt21(bytepkt[21]));
  bytepkt_21__MGIOL \bytepkt[21]_MGIOL ( .IOLDO(\bytepkt_c[21] ), 
    .OPOS(\bytepkt_2[21] ), .CLK(byte_clk5_c));
  bytepkt_20_ \bytepkt[20]_I ( .IOLDO(\bytepkt_c[20] ), 
    .bytepkt20(bytepkt[20]));
  bytepkt_20__MGIOL \bytepkt[20]_MGIOL ( .IOLDO(\bytepkt_c[20] ), 
    .OPOS(\bytepkt_2[20] ), .CLK(byte_clk5_c));
  bytepkt_19_ \bytepkt[19]_I ( .IOLDO(\bytepkt_c[19] ), 
    .bytepkt19(bytepkt[19]));
  bytepkt_19__MGIOL \bytepkt[19]_MGIOL ( .IOLDO(\bytepkt_c[19] ), 
    .OPOS(\bytepkt_2[19] ), .CLK(byte_clk5_c));
  bytepkt_18_ \bytepkt[18]_I ( .IOLDO(\bytepkt_c[18] ), 
    .bytepkt18(bytepkt[18]));
  bytepkt_18__MGIOL \bytepkt[18]_MGIOL ( .IOLDO(\bytepkt_c[18] ), 
    .OPOS(N_73_i), .CLK(byte_clk5_c));
  bytepkt_17_ \bytepkt[17]_I ( .IOLDO(\bytepkt_c[17] ), 
    .bytepkt17(bytepkt[17]));
  bytepkt_17__MGIOL \bytepkt[17]_MGIOL ( .IOLDO(\bytepkt_c[17] ), 
    .OPOS(N_71_i), .CLK(byte_clk5_c));
  bytepkt_16_ \bytepkt[16]_I ( .IOLDO(\bytepkt_c[16] ), 
    .bytepkt16(bytepkt[16]));
  bytepkt_16__MGIOL \bytepkt[16]_MGIOL ( .IOLDO(\bytepkt_c[16] ), 
    .OPOS(N_69_i), .CLK(byte_clk5_c));
  bytepkt_15_ \bytepkt[15]_I ( .IOLDO(\bytepkt_c[15] ), 
    .bytepkt15(bytepkt[15]));
  bytepkt_15__MGIOL \bytepkt[15]_MGIOL ( .IOLDO(\bytepkt_c[15] ), 
    .OPOS(\bytepkt_2[15] ), .CLK(byte_clk5_c));
  bytepkt_14_ \bytepkt[14]_I ( .IOLDO(\bytepkt_c[14] ), 
    .bytepkt14(bytepkt[14]));
  bytepkt_14__MGIOL \bytepkt[14]_MGIOL ( .IOLDO(\bytepkt_c[14] ), 
    .OPOS(N_67_i), .CLK(byte_clk5_c));
  bytepkt_13_ \bytepkt[13]_I ( .IOLDO(\bytepkt_c[13] ), 
    .bytepkt13(bytepkt[13]));
  bytepkt_13__MGIOL \bytepkt[13]_MGIOL ( .IOLDO(\bytepkt_c[13] ), 
    .OPOS(\bytepkt_2[13] ), .CLK(byte_clk5_c));
  bytepkt_12_ \bytepkt[12]_I ( .IOLDO(\bytepkt_c[12] ), 
    .bytepkt12(bytepkt[12]));
  bytepkt_12__MGIOL \bytepkt[12]_MGIOL ( .IOLDO(\bytepkt_c[12] ), 
    .OPOS(\bytepkt_2[12] ), .CLK(byte_clk5_c));
  bytepkt_11_ \bytepkt[11]_I ( .IOLDO(\bytepkt_c[11] ), 
    .bytepkt11(bytepkt[11]));
  bytepkt_11__MGIOL \bytepkt[11]_MGIOL ( .IOLDO(\bytepkt_c[11] ), 
    .OPOS(\bytepkt_2[11] ), .CLK(byte_clk5_c));
  bytepkt_10_ \bytepkt[10]_I ( .IOLDO(\bytepkt_c[10] ), 
    .bytepkt10(bytepkt[10]));
  bytepkt_10__MGIOL \bytepkt[10]_MGIOL ( .IOLDO(\bytepkt_c[10] ), 
    .OPOS(N_64_i), .CLK(byte_clk5_c));
  bytepkt_9_ \bytepkt[9]_I ( .IOLDO(\bytepkt_c[9] ), .bytepkt9(bytepkt[9]));
  bytepkt_9__MGIOL \bytepkt[9]_MGIOL ( .IOLDO(\bytepkt_c[9] ), .OPOS(N_62_i), 
    .CLK(byte_clk5_c));
  bytepkt_8_ \bytepkt[8]_I ( .IOLDO(\bytepkt_c[8] ), .bytepkt8(bytepkt[8]));
  bytepkt_8__MGIOL \bytepkt[8]_MGIOL ( .IOLDO(\bytepkt_c[8] ), .OPOS(N_60_i), 
    .CLK(byte_clk5_c));
  bytepkt_7_ \bytepkt[7]_I ( .IOLDO(\bytepkt_c[7] ), .bytepkt7(bytepkt[7]));
  bytepkt_7__MGIOL \bytepkt[7]_MGIOL ( .IOLDO(\bytepkt_c[7] ), 
    .OPOS(\bytepkt_2[7] ), .CLK(byte_clk5_c));
  bytepkt_6_ \bytepkt[6]_I ( .IOLDO(\bytepkt_c[6] ), .bytepkt6(bytepkt[6]));
  bytepkt_6__MGIOL \bytepkt[6]_MGIOL ( .IOLDO(\bytepkt_c[6] ), .OPOS(N_58_i), 
    .CLK(byte_clk5_c));
  bytepkt_5_ \bytepkt[5]_I ( .IOLDO(\bytepkt_c[5] ), .bytepkt5(bytepkt[5]));
  bytepkt_5__MGIOL \bytepkt[5]_MGIOL ( .IOLDO(\bytepkt_c[5] ), 
    .OPOS(\bytepkt_2[5] ), .CLK(byte_clk5_c));
  bytepkt_4_ \bytepkt[4]_I ( .IOLDO(\bytepkt_c[4] ), .bytepkt4(bytepkt[4]));
  bytepkt_4__MGIOL \bytepkt[4]_MGIOL ( .IOLDO(\bytepkt_c[4] ), 
    .OPOS(\bytepkt_2[4] ), .CLK(byte_clk5_c));
  bytepkt_3_ \bytepkt[3]_I ( .IOLDO(\bytepkt_c[3] ), .bytepkt3(bytepkt[3]));
  bytepkt_3__MGIOL \bytepkt[3]_MGIOL ( .IOLDO(\bytepkt_c[3] ), 
    .OPOS(\bytepkt_2[3] ), .CLK(byte_clk5_c));
  bytepkt_2_ \bytepkt[2]_I ( .IOLDO(\bytepkt_c[2] ), .bytepkt2(bytepkt[2]));
  bytepkt_2__MGIOL \bytepkt[2]_MGIOL ( .IOLDO(\bytepkt_c[2] ), .OPOS(N_55_i), 
    .CLK(byte_clk5_c));
  bytepkt_1_ \bytepkt[1]_I ( .IOLDO(\bytepkt_c[1] ), .bytepkt1(bytepkt[1]));
  bytepkt_1__MGIOL \bytepkt[1]_MGIOL ( .IOLDO(\bytepkt_c[1] ), .OPOS(N_53_i), 
    .CLK(byte_clk5_c));
  bytepkt_0_ \bytepkt[0]_I ( .IOLDO(\bytepkt_c[0] ), .bytepkt0(bytepkt[0]));
  bytepkt_0__MGIOL \bytepkt[0]_MGIOL ( .IOLDO(\bytepkt_c[0] ), .OPOS(N_35_i), 
    .CLK(byte_clk5_c));
  chksum_15_ \chksum[15]_I ( .PADDI(\chksum_c[15] ), .chksum15(chksum[15]));
  chksum_15__MGIOL \chksum[15]_MGIOL ( .DI(\chksum_c[15] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[15] ));
  chksum_14_ \chksum[14]_I ( .PADDI(\chksum_c[14] ), .chksum14(chksum[14]));
  chksum_14__MGIOL \chksum[14]_MGIOL ( .DI(\chksum_c[14] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[14] ));
  chksum_13_ \chksum[13]_I ( .PADDI(\chksum_c[13] ), .chksum13(chksum[13]));
  chksum_13__MGIOL \chksum[13]_MGIOL ( .DI(\chksum_c[13] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[13] ));
  chksum_12_ \chksum[12]_I ( .PADDI(\chksum_c[12] ), .chksum12(chksum[12]));
  chksum_12__MGIOL \chksum[12]_MGIOL ( .DI(\chksum_c[12] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[12] ));
  chksum_11_ \chksum[11]_I ( .PADDI(\chksum_c[11] ), .chksum11(chksum[11]));
  chksum_11__MGIOL \chksum[11]_MGIOL ( .DI(\chksum_c[11] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[11] ));
  chksum_10_ \chksum[10]_I ( .PADDI(\chksum_c[10] ), .chksum10(chksum[10]));
  chksum_10__MGIOL \chksum[10]_MGIOL ( .DI(\chksum_c[10] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[10] ));
  chksum_9_ \chksum[9]_I ( .PADDI(\chksum_c[9] ), .chksum9(chksum[9]));
  chksum_9__MGIOL \chksum[9]_MGIOL ( .DI(\chksum_c[9] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[9] ));
  chksum_8_ \chksum[8]_I ( .PADDI(\chksum_c[8] ), .chksum8(chksum[8]));
  chksum_8__MGIOL \chksum[8]_MGIOL ( .DI(\chksum_c[8] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[8] ));
  chksum_7_ \chksum[7]_I ( .PADDI(\chksum_c[7] ), .chksum7(chksum[7]));
  chksum_7__MGIOL \chksum[7]_MGIOL ( .DI(\chksum_c[7] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[7] ));
  chksum_6_ \chksum[6]_I ( .PADDI(\chksum_c[6] ), .chksum6(chksum[6]));
  chksum_6__MGIOL \chksum[6]_MGIOL ( .DI(\chksum_c[6] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[6] ));
  chksum_5_ \chksum[5]_I ( .PADDI(\chksum_c[5] ), .chksum5(chksum[5]));
  chksum_5__MGIOL \chksum[5]_MGIOL ( .DI(\chksum_c[5] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[5] ));
  chksum_4_ \chksum[4]_I ( .PADDI(\chksum_c[4] ), .chksum4(chksum[4]));
  chksum_4__MGIOL \chksum[4]_MGIOL ( .DI(\chksum_c[4] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[4] ));
  chksum_3_ \chksum[3]_I ( .PADDI(\chksum_c[3] ), .chksum3(chksum[3]));
  chksum_3__MGIOL \chksum[3]_MGIOL ( .DI(\chksum_c[3] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[3] ));
  chksum_2_ \chksum[2]_I ( .PADDI(\chksum_c[2] ), .chksum2(chksum[2]));
  chksum_2__MGIOL \chksum[2]_MGIOL ( .DI(\chksum_c[2] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[2] ));
  chksum_1_ \chksum[1]_I ( .PADDI(\chksum_c[1] ), .chksum1(chksum[1]));
  chksum_1__MGIOL \chksum[1]_MGIOL ( .DI(\chksum_c[1] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[1] ));
  chksum_0_ \chksum[0]_I ( .PADDI(\chksum_c[0] ), .chksum0(chksum[0]));
  chksum_0__MGIOL \chksum[0]_MGIOL ( .DI(\chksum_c[0] ), .CE(chksum_rdy_c), 
    .CLK(byte_clk5_c), .IN(\q_chksum[0] ));
  chksum_rdy chksum_rdy_I( .PADDI(chksum_rdy_c), .chksum_rdy(chksum_rdy));
  wc_15_ \wc[15]_I ( .PADDI(\wc_c[15] ), .wc15(wc[15]));
  wc_15__MGIOL \wc[15]_MGIOL ( .DI(\wc_c[15] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[15] ));
  wc_14_ \wc[14]_I ( .PADDI(\wc_c[14] ), .wc14(wc[14]));
  wc_14__MGIOL \wc[14]_MGIOL ( .DI(\wc_c[14] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[14] ));
  wc_13_ \wc[13]_I ( .PADDI(\wc_c[13] ), .wc13(wc[13]));
  wc_13__MGIOL \wc[13]_MGIOL ( .DI(\wc_c[13] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[13] ));
  wc_12_ \wc[12]_I ( .PADDI(\wc_c[12] ), .wc12(wc[12]));
  wc_12__MGIOL \wc[12]_MGIOL ( .DI(\wc_c[12] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[12] ));
  wc_11_ \wc[11]_I ( .PADDI(\wc_c[11] ), .wc11(wc[11]));
  wc_11__MGIOL \wc[11]_MGIOL ( .DI(\wc_c[11] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[11] ));
  wc_10_ \wc[10]_I ( .PADDI(\wc_c[10] ), .wc10(wc[10]));
  wc_10__MGIOL \wc[10]_MGIOL ( .DI(\wc_c[10] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[10] ));
  wc_9_ \wc[9]_I ( .PADDI(\wc_c[9] ), .wc9(wc[9]));
  wc_9__MGIOL \wc[9]_MGIOL ( .DI(\wc_c[9] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[9] ));
  wc_8_ \wc[8]_I ( .PADDI(\wc_c[8] ), .wc8(wc[8]));
  wc_8__MGIOL \wc[8]_MGIOL ( .DI(\wc_c[8] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[8] ));
  wc_7_ \wc[7]_I ( .PADDI(\wc_c[7] ), .wc7(wc[7]));
  wc_7__MGIOL \wc[7]_MGIOL ( .DI(\wc_c[7] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[7] ));
  wc_6_ \wc[6]_I ( .PADDI(\wc_c[6] ), .wc6(wc[6]));
  wc_6__MGIOL \wc[6]_MGIOL ( .DI(\wc_c[6] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[6] ));
  wc_5_ \wc[5]_I ( .PADDI(\wc_c[5] ), .wc5(wc[5]));
  wc_5__MGIOL \wc[5]_MGIOL ( .DI(\wc_c[5] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[5] ));
  wc_4_ \wc[4]_I ( .PADDI(\wc_c[4] ), .wc4(wc[4]));
  wc_4__MGIOL \wc[4]_MGIOL ( .DI(\wc_c[4] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[4] ));
  wc_3_ \wc[3]_I ( .PADDI(\wc_c[3] ), .wc3(wc[3]));
  wc_3__MGIOL \wc[3]_MGIOL ( .DI(\wc_c[3] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[3] ));
  wc_2_ \wc[2]_I ( .PADDI(\wc_c[2] ), .wc2(wc[2]));
  wc_2__MGIOL \wc[2]_MGIOL ( .DI(\wc_c[2] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[2] ));
  wc_1_ \wc[1]_I ( .PADDI(\wc_c[1] ), .wc1(wc[1]));
  wc_1__MGIOL \wc[1]_MGIOL ( .DI(\wc_c[1] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[1] ));
  wc_0_ \wc[0]_I ( .PADDI(\wc_c[0] ), .wc0(wc[0]));
  wc_0__MGIOL \wc[0]_MGIOL ( .DI(\wc_c[0] ), .CE(N_347_i), .CLK(byte_clk5_c), 
    .IN(\q_wc[0] ));
  dt_5_ \dt[5]_I ( .PADDI(\dt_c[5] ), .dt5(dt[5]));
  dt_5__MGIOL \dt[5]_MGIOL ( .DI(\dt_c[5] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_dt[5] ));
  dt_4_ \dt[4]_I ( .PADDI(\dt_c[4] ), .dt4(dt[4]));
  dt_4__MGIOL \dt[4]_MGIOL ( .DI(\dt_c[4] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_dt[4] ));
  dt_3_ \dt[3]_I ( .PADDI(\dt_c[3] ), .dt3(dt[3]));
  dt_3__MGIOL \dt[3]_MGIOL ( .DI(\dt_c[3] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_dt[3] ));
  dt_2_ \dt[2]_I ( .PADDI(\dt_c[2] ), .dt2(dt[2]));
  dt_2__MGIOL \dt[2]_MGIOL ( .DI(\dt_c[2] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_dt[2] ));
  dt_1_ \dt[1]_I ( .PADDI(\dt_c[1] ), .dt1(dt[1]));
  dt_1__MGIOL \dt[1]_MGIOL ( .DI(\dt_c[1] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_dt[1] ));
  dt_0_ \dt[0]_I ( .PADDI(\dt_c[0] ), .dt0(dt[0]));
  dt_0__MGIOL \dt[0]_MGIOL ( .DI(\dt_c[0] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_dt[0] ));
  vc_1_ \vc[1]_I ( .PADDI(\vc_c[1] ), .vc1(vc[1]));
  vc_1__MGIOL \vc[1]_MGIOL ( .DI(\vc_c[1] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_vc[1] ));
  vc_0_ \vc[0]_I ( .PADDI(\vc_c[0] ), .vc0(vc[0]));
  vc_0__MGIOL \vc[0]_MGIOL ( .DI(\vc_c[0] ), .CE(N_196), .CLK(byte_clk5_c), 
    .IN(\q_vc[0] ));
  byte_data7_31_ \byte_data7[31]_I ( .PADDI(\byte_data7_c[31] ), 
    .bytedata31(byte_data[31]));
  byte_data7_30_ \byte_data7[30]_I ( .PADDI(\byte_data7_c[30] ), 
    .bytedata30(byte_data[30]));
  byte_data7_29_ \byte_data7[29]_I ( .PADDI(\byte_data7_c[29] ), 
    .bytedata29(byte_data[29]));
  byte_data7_28_ \byte_data7[28]_I ( .PADDI(\byte_data7_c[28] ), 
    .bytedata28(byte_data[28]));
  byte_data7_27_ \byte_data7[27]_I ( .PADDI(\byte_data7_c[27] ), 
    .bytedata27(byte_data[27]));
  byte_data7_26_ \byte_data7[26]_I ( .PADDI(\byte_data7_c[26] ), 
    .bytedata26(byte_data[26]));
  byte_data7_25_ \byte_data7[25]_I ( .PADDI(\byte_data7_c[25] ), 
    .bytedata25(byte_data[25]));
  byte_data7_24_ \byte_data7[24]_I ( .PADDI(\byte_data7_c[24] ), 
    .bytedata24(byte_data[24]));
  byte_data7_23_ \byte_data7[23]_I ( .PADDI(\byte_data7_c[23] ), 
    .bytedata23(byte_data[23]));
  byte_data7_22_ \byte_data7[22]_I ( .PADDI(\byte_data7_c[22] ), 
    .bytedata22(byte_data[22]));
  byte_data7_21_ \byte_data7[21]_I ( .PADDI(\byte_data7_c[21] ), 
    .bytedata21(byte_data[21]));
  byte_data7_20_ \byte_data7[20]_I ( .PADDI(\byte_data7_c[20] ), 
    .bytedata20(byte_data[20]));
  byte_data7_19_ \byte_data7[19]_I ( .PADDI(\byte_data7_c[19] ), 
    .bytedata19(byte_data[19]));
  byte_data7_18_ \byte_data7[18]_I ( .PADDI(\byte_data7_c[18] ), 
    .bytedata18(byte_data[18]));
  byte_data7_17_ \byte_data7[17]_I ( .PADDI(\byte_data7_c[17] ), 
    .bytedata17(byte_data[17]));
  byte_data7_16_ \byte_data7[16]_I ( .PADDI(\byte_data7_c[16] ), 
    .bytedata16(byte_data[16]));
  byte_data7_15_ \byte_data7[15]_I ( .PADDI(\byte_data7_c[15] ), 
    .bytedata15(byte_data[15]));
  byte_data7_14_ \byte_data7[14]_I ( .PADDI(\byte_data7_c[14] ), 
    .bytedata14(byte_data[14]));
  byte_data7_13_ \byte_data7[13]_I ( .PADDI(\byte_data7_c[13] ), 
    .bytedata13(byte_data[13]));
  byte_data7_12_ \byte_data7[12]_I ( .PADDI(\byte_data7_c[12] ), 
    .bytedata12(byte_data[12]));
  byte_data7_11_ \byte_data7[11]_I ( .PADDI(\byte_data7_c[11] ), 
    .bytedata11(byte_data[11]));
  byte_data7_10_ \byte_data7[10]_I ( .PADDI(\byte_data7_c[10] ), 
    .bytedata10(byte_data[10]));
  byte_data7_9_ \byte_data7[9]_I ( .PADDI(\byte_data7_c[9] ), 
    .bytedata9(byte_data[9]));
  byte_data7_8_ \byte_data7[8]_I ( .PADDI(\byte_data7_c[8] ), 
    .bytedata8(byte_data[8]));
  byte_data7_7_ \byte_data7[7]_I ( .PADDI(\byte_data7_c[7] ), 
    .bytedata7(byte_data[7]));
  byte_data7_6_ \byte_data7[6]_I ( .PADDI(\byte_data7_c[6] ), 
    .bytedata6(byte_data[6]));
  byte_data7_5_ \byte_data7[5]_I ( .PADDI(\byte_data7_c[5] ), 
    .bytedata5(byte_data[5]));
  byte_data7_4_ \byte_data7[4]_I ( .PADDI(\byte_data7_c[4] ), 
    .bytedata4(byte_data[4]));
  byte_data7_3_ \byte_data7[3]_I ( .PADDI(\byte_data7_c[3] ), 
    .bytedata3(byte_data[3]));
  byte_data7_2_ \byte_data7[2]_I ( .PADDI(\byte_data7_c[2] ), 
    .bytedata2(byte_data[2]));
  byte_data7_1_ \byte_data7[1]_I ( .PADDI(\byte_data7_c[1] ), 
    .bytedata1(byte_data[1]));
  byte_data7_0_ \byte_data7[0]_I ( .PADDI(\byte_data7_c[0] ), 
    .bytedata0(byte_data[0]));
  byte_clk5 byte_clk5_I( .PADDI(byte_clk5_c), .byte_clk5(byte_clk));
  long_en long_en_I( .PADDI(long_en_c), .long_en(long_en));
  long_en_MGIOL long_en_MGIOL( .DI(long_en_c), .CLK(byte_clk5_c), 
    .IN(q_long_en));
  short_en short_en_I( .PADDI(short_en_c), .short_en(short_en));
  short_en_MGIOL short_en_MGIOL( .DI(short_en_c), .CLK(byte_clk5_c), 
    .IN(q_short_en));
  GSR_INST3 GSR_INST3( .GSRNET(reset_n6_c));
  VHI VHI_INST( .Z(vcc5I));
  PUR PUR_INST( .PUR(vcc5I));
endmodule

module SLICE4_0 ( input B1, A1, B0, DI1, CLK, output F1, Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly;

  vmuxregsre5 \lpkt_cnt[0] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  ccu2 \lpkt_cnt_cry_0[0] ( .A0(gnd6I), .B0(B0), .C0(gnd6I), .D0(gnd6I), .A1(A1), 
    .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(gnd6I), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre5 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module vcc5 ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd6 ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'hF008;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_PH_DLY_FIFO_SLICE4_1 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_58 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_59 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult \u_PH_DLY_FIFO/r_gctr_1 ( .A0(A0), .A1(A1), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre50001 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module alu2_mult ( input A0, A1, CI, output S0, S1, CO1 );

  CU2 INST01( .CI(CI), .PC0(A0), .PC1(A1), .CO(CO1), .NC0(S0), .NC1(S1));
endmodule

module u_PH_DLY_FIFO_SLICE4_2 ( input DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   vcc5I, gnd6I, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_0 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  alu2_mult0002 \u_PH_DLY_FIFO/a1 ( .A0(gnd6I), .A1(gnd6I), .B0(gnd6I), .B1(gnd6I), 
    .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult0002 ( input A0, A1, B0, B1, CI, output S0, S1, CO1 );

  FADD2B INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .COUT(CO1), 
    .S0(S0), .S1(S1));
endmodule

module u_PH_DLY_FIFO_SLICE4_3 ( input B1, A1, B0, A0, M1, M0, LSR, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   vcc5I, gnd6I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_13 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_12 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult0003 \u_PH_DLY_FIFO/empty_cmp_0 ( .A0(A0), .A1(A1), .B0(B0), 
    .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult0003 ( input A0, A1, B0, B1, CI, output CO1 );

  AGEB2 INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .GE(CO1));
endmodule

module u_PH_DLY_FIFO_SLICE4_4 ( output FCO );
  wire   gnd6I, vcc5I;

  alu2_mult0002 \u_PH_DLY_FIFO/w_gctr_cia ( .A0(gnd6I), .A1(vcc5I), .B0(gnd6I), 
    .B1(vcc5I), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));

  specify
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_5 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_72 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50004 \u_PH_DLY_FIFO/FF_73 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult \u_PH_DLY_FIFO/w_gctr_0 ( .A0(A0), .A1(A1), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre50004 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module u_PH_DLY_FIFO_SLICE4_6 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_70 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_71 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult \u_PH_DLY_FIFO/w_gctr_1 ( .A0(A0), .A1(A1), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_7 ( input M1, M0, LSR, CLK, output Q0, Q1, FCO );
  wire   vcc5I, gnd6I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_9 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_8 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult0002 \u_PH_DLY_FIFO/r_gctr_cia ( .A0(gnd6I), .A1(vcc5I), .B0(gnd6I), 
    .B1(vcc5I), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_8 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_60 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50004 \u_PH_DLY_FIFO/FF_61 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult \u_PH_DLY_FIFO/r_gctr_0 ( .A0(A0), .A1(A1), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_9 ( input B1, A1, M1, M0, LSR, CLK, output Q0, Q1, 
    FCO );
  wire   vcc5I, gnd6I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_17 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_16 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult0002 \u_PH_DLY_FIFO/empty_cmp_ci_a ( .A0(gnd6I), .A1(A1), .B0(gnd6I), 
    .B1(B1), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_10 ( input DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   vcc5I, gnd6I, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre50004 \u_PH_DLY_FIFO/FF_1 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  alu2_mult0002 \u_PH_DLY_FIFO/a0 ( .A0(gnd6I), .A1(gnd6I), .B0(gnd6I), .B1(gnd6I), 
    .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_11 ( input B1, A1, M1, M0, LSR, CLK, output Q0, Q1, 
    FCO );
  wire   vcc5I, gnd6I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_7 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_6 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult0002 \u_PH_DLY_FIFO/full_cmp_ci_a ( .A0(gnd6I), .A1(A1), .B0(gnd6I), 
    .B1(B1), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_12 ( input B1, A1, B0, A0, M1, M0, LSR, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   vcc5I, gnd6I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_5 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_4 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult0003 \u_PH_DLY_FIFO/full_cmp_1 ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), 
    .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_13 ( input B1, A1, B0, A0, M1, M0, LSR, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   vcc5I, gnd6I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_3 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_2 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult0003 \u_PH_DLY_FIFO/full_cmp_0 ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), 
    .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_14 ( input B1, A1, B0, A0, M1, M0, LSR, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   vcc5I, gnd6I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre50001 \u_PH_DLY_FIFO/FF_15 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_14 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  alu2_mult0003 \u_PH_DLY_FIFO/empty_cmp_1 ( .A0(A0), .A1(A1), .B0(B0), 
    .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_15 ( input DI0, CLK, FCI, output F0, Q0 );
  wire   vcc5I, gnd6I, DI0_dly, CLK_dly;

  vmuxregsre5 chksum_En( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  ccu20005 un10_wc_end_flag_0_I_51_0( .A0(gnd6I), .B0(gnd6I), .C0(gnd6I), 
    .D0(gnd6I), .A1(gnd6I), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300F;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE4_16 ( input A1, C0, B0, A0, FCI, output FCO );
  wire   gnd6I;

  ccu20006 un10_wc_end_flag_0_I_33_0( .A0(A0), .B0(B0), .C0(C0), .D0(gnd6I), 
    .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5081;
  defparam inst1.INIT1 = 16'h5001;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE4_17 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20007 un10_wc_end_flag_0_I_15_0( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9009;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE4_18 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20007 un10_wc_end_flag_0_I_45_0( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_19 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20007 un10_wc_end_flag_0_I_21_0( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_20 ( input D1, C1, B1, A1, output FCO );
  wire   gnd6I;

  ccu20008 un10_wc_end_flag_0_I_1_0( .A0(gnd6I), .B0(gnd6I), .C0(gnd6I), 
    .D0(gnd6I), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(gnd6I), .S0(), .S1(), 
    .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h0990;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE4_21 ( input A0, FCI, output F0, F1 );
  wire   gnd6I;

  ccu20009 \un2_wc_end_flag.un2_wc_end_flag_cry_13_0 ( .A0(A0), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(gnd6I), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1());
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0001;
  defparam inst1.INIT1 = 16'h300F;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE4_22 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   gnd6I;

  ccu20010 \un2_wc_end_flag.un2_wc_end_flag_cry_11_0 ( .A0(A0), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0001;
  defparam inst1.INIT1 = 16'h0001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE4_23 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   gnd6I;

  ccu20010 \un2_wc_end_flag.un2_wc_end_flag_cry_9_0 ( .A0(A0), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_24 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   gnd6I;

  ccu20010 \un2_wc_end_flag.un2_wc_end_flag_cry_7_0 ( .A0(A0), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_25 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   gnd6I;

  ccu20010 \un2_wc_end_flag.un2_wc_end_flag_cry_5_0 ( .A0(A0), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_26 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   gnd6I;

  ccu20010 \un2_wc_end_flag.un2_wc_end_flag_cry_3_0 ( .A0(A0), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_27 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   gnd6I;

  ccu20010 \un2_wc_end_flag.un2_wc_end_flag_cry_1_0 ( .A0(A0), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_28 ( input A1, output FCO );
  wire   gnd6I;

  ccu20011 \un2_wc_end_flag.un2_wc_end_flag_cry_0_0 ( .A0(gnd6I), .B0(gnd6I), 
    .C0(gnd6I), .D0(gnd6I), .A1(A1), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(gnd6I), 
    .S0(), .S1(), .CO1(FCO));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h5001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE4_29 ( input B0, A0, DI0, CLK, FCI, output F0, Q0 );
  wire   vcc5I, gnd6I, DI0_dly, CLK_dly;

  vmuxregsre5 \lpkt_cnt[15] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  ccu20012 \lpkt_cnt_s_0[15] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(gnd6I), .B1(gnd6I), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5008;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE4_30 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre5 \lpkt_cnt[14] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \lpkt_cnt[13] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  ccu20013 \lpkt_cnt_cry_0[13] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(A1), .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF008;
  defparam inst1.INIT1 = 16'hF008;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE4_31 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre5 \lpkt_cnt[12] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \lpkt_cnt[11] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  ccu20013 \lpkt_cnt_cry_0[11] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(A1), .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_32 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre5 \lpkt_cnt[10] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \lpkt_cnt[9] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  ccu20013 \lpkt_cnt_cry_0[9] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(A1), .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_33 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre5 \lpkt_cnt[8] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \lpkt_cnt[7] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  ccu20013 \lpkt_cnt_cry_0[7] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(A1), .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_34 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre5 \lpkt_cnt[6] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \lpkt_cnt[5] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  ccu20013 \lpkt_cnt_cry_0[5] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(A1), .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_35 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre5 \lpkt_cnt[4] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \lpkt_cnt[3] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  ccu20013 \lpkt_cnt_cry_0[3] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(A1), .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_36 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre5 \lpkt_cnt[2] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \lpkt_cnt[1] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  ccu20013 \lpkt_cnt_cry_0[1] ( .A0(A0), .B0(B0), .C0(gnd6I), .D0(gnd6I), 
    .A1(A1), .B1(B1), .C1(gnd6I), .D1(gnd6I), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_7_14 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_7/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module buffer ( input I, output Z );

  BUFBA INST1( .A(I), .Z(Z));
endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_7 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_7/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_48 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_49 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, WRE, 
    WCK, output DO0, DO1 );
  wire   TIELO;

  VLO gnd61( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(DI0), .DI1(DI1), .DI2(TIELO), 
    .DI3(TIELO), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(DO0), 
    .DO1(DO1), .DO2(), .DO3());
endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_7_15 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_7/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_46 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_47 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram0014 ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, 
    WRE, WCK, output DO0, DO1 );
  wire   TIELO;

  VLO gnd61( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(TIELO), .DI1(TIELO), .DI2(DI0), 
    .DI3(DI1), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(), .DO1(), 
    .DO2(DO0), .DO3(DO1));
endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_0 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_0/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_0_1 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_0/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_20 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_21 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_0_0 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_0/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_18 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_19 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_1 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_1/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_1_2 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_1/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_24 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_25 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_1_3 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_1/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_22 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_23 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_2_5 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_2/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_2_4 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_2/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_28 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_29 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_2 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_2/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_26 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_27 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_3_6 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_3/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_3 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_3/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_32 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_33 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_3_7 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_3/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_30 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_31 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_4_8 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_4/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_4_9 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_4/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_36 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_37 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_4 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_4/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_34 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_35 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_5 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_5/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_5_11 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_5/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_40 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_41 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_5_10 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_5/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_38 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_39 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_6_12 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \u_PH_DLY_FIFO/fifo_pfu_0_6/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_6 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \u_PH_DLY_FIFO/fifo_pfu_0_6/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_44 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_45 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_fifo_pfu_0_6_13 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, 
    WAD2, WAD3, WD0, WD1 );
  wire   vcc5I, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, LSR_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0014 \u_PH_DLY_FIFO/fifo_pfu_0_6/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_42 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_43 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_61 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly, M1_dly;

  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[28] ( .A(A1), .B(B1), .C(C1), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460015 \bytepkt_cnst_31_0_.un2_EoTp_En[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre5 \EoTp_En[1] ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre5 \EoTp_En[0] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut46 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_62 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   vcc5I, gnd6I, DI0_dly, CLK_dly, CE_dly;

  lut460016 \bytepkt_cnst_31_0_.un1_q_long_pkt_indicator_1_i_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460017 \bytepkt_cnst_31_0_.un1_q_long_pkt_indicator_1_1_i_o2 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre5 PH_En( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_63 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, DI1_dly, CLK_dly, DI0_dly;

  lut460018 \bytepkt_cnst_31_0_.SUM1_0_x2 ( .A(A1), .B(B1), .C(gnd6I), .D(gnd6I), 
    .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460019 \bytepkt_cnst_31_0_.un7_PH_cnt_0_a2[0] ( .A(A0), .B(B0), .C(gnd6I), 
    .D(gnd6I), .Z(F0));
  vmuxregsre5 \PH_cnt[1] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre5 \PH_cnt[0] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_64 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd6I, vcc5I, DI1_dly, CLK_dly, DI0_dly;

  lut460020 \bytepkt_cnst_31_0_.un7_PH_cnt_i_o2_RNIOT8F[3] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460021 \bytepkt_cnst_31_0_.N_171_i_i ( .A(A0), .B(B0), .C(C0), .D(gnd6I), 
    .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \PH_cnt[3] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre5 \PH_cnt[2] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_65 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly;

  lut460022 \bytepkt_cnst_31_0_.DataID_En_2_0_a2_0 ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460023 \bytepkt_cnst_31_0_.DataID_En_2_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre5 WC_1_En( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_66 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly;

  lut460024 \bytepkt_cnst_31_0_.bytepkt_2_2_0_a2_1[30] ( .A(A1), .B(B1), 
    .C(gnd6I), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460025 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_3_RNIHR3P[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre5 bytepkt_en( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_67 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly;

  lut460026 \bytepkt_cnst_31_0_.un7_PH_cnt_i_o2[3] ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460027 \bytepkt_cnst_31_0_.hsSync_En_2_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre5 hsSync_En( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_68 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly, CE_dly;

  lut460028 \bytepkt_cnst_31_0_.un15_lpkt_cnt_En_i_0 ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460029 \bytepkt_cnst_31_0_.un2_lpkt_cnt_En_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre5 lpkt_cnt_En( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut460030 \bytepkt_cnst_31_0_.un87_q_ECC_0_a2 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460030 \bytepkt_cnst_31_0_.un108_q_ECC_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre5 \q_ECC[1] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \q_ECC[0] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6996) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut460031 \bytepkt_cnst_31_0_.un47_q_ECC_0_a2 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460031 \bytepkt_cnst_31_0_.un67_q_ECC_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre5 \q_ECC[3] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \q_ECC[2] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9669) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc5I, gnd6I, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut460031 \bytepkt_cnst_31_0_.un7_q_ECC_0_a2 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut460031 \bytepkt_cnst_31_0_.un27_q_ECC_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre5 \q_ECC[5] ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre5 \q_ECC[4] ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_75 ( input B1, A1, B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly, CE_dly;

  lut460028 \bytepkt_cnst_31_0_.un5_q_ECC ( .A(A1), .B(B1), .C(gnd6I), .D(gnd6I), 
    .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460032 \bytepkt_cnst_31_0_.N_453_i ( .A(A0), .B(B0), .C(gnd6I), .D(gnd6I), 
    .Z(F0));
  vmuxregsre5 q_long_pkt_indicator( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_PH_DLY_FIFO_SLICE4_76 ( input B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut460018 \u_PH_DLY_FIFO/XOR2_t1 ( .A(A1), .B(B1), .C(gnd6I), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460018 \u_PH_DLY_FIFO/XOR2_t2 ( .A(A0), .B(B0), .C(gnd6I), .D(gnd6I), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_56 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_57 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_77 ( input B1, A1, B0, A0, DI0, M1, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  lut460018 \u_PH_DLY_FIFO/lut46_8 ( .A(A1), .B(B1), .C(gnd6I), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460018 \u_PH_DLY_FIFO/XOR2_t0 ( .A(A0), .B(B0), .C(gnd6I), .D(gnd6I), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_54 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_55 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_84 ( input B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut460018 \u_PH_DLY_FIFO/XOR2_t4 ( .A(A1), .B(B1), .C(gnd6I), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460018 \u_PH_DLY_FIFO/XOR2_t5 ( .A(A0), .B(B0), .C(gnd6I), .D(gnd6I), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_68 ( .D0(vcc5I), .D1(DI1_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_69 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_85 ( input B1, A1, B0, A0, DI0, M1, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  lut460018 \u_PH_DLY_FIFO/lut46_5 ( .A(A1), .B(B1), .C(gnd6I), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460018 \u_PH_DLY_FIFO/XOR2_t3 ( .A(A0), .B(B0), .C(gnd6I), .D(gnd6I), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_66 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_67 ( .D0(vcc5I), .D1(DI0_dly), .SD(vcc5I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_91 ( input D1, C1, B1, A1, M1, M0, CE, LSR, CLK, output F0, Q0, 
    F1, Q1 );
  wire   gnd6I, vcc5I, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut460030 \bytepkt_cnst_31_0_.un67_q_ECC_0_a2_4 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460033 \u_PH_DLY_FIFO/vcc5 ( .A(gnd6I), .B(gnd6I), .C(gnd6I), .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_62 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_63 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_92 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460034 \bytepkt_cnst_31_0_.bytepkt_2_i_o2[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460035 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_RNIOL7R[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAABA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_93 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460036 \bytepkt_cnst_31_0_.bytepkt_2_0[28] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460037 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_3_RNI05961[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_94 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_0[21] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460039 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[21] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_95 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_0[20] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460039 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[20] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_96 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460040 \bytepkt_cnst_31_0_.bytepkt_2_0_m2_RNIV9R12[19] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460041 \bytepkt_cnst_31_0_.bytepkt_2_0_a2_2[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_97 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460042 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_3[6] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460043 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_3_RNI05961_0[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_98 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460044 \bytepkt_cnst_31_0_.bytepkt_2_i_o2[24] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460045 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2_RNIUIO31[16] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2031) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_99 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460036 \bytepkt_cnst_31_0_.bytepkt_2_0[29] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[29] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_100 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460046 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2_RNI6ICC1[25] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[25] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_101 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460046 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2_RNI7JCC1[26] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[26] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_102 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460047 \bytepkt_cnst_31_0_.bytepkt_2_0_m2[19] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[19] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_103 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460022 \bytepkt_cnst_31_0_.bytepkt_2_0_a2[19] ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460048 \bytepkt_cnst_31_0_.bytepkt_2_i_o2[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8FC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_104 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_0[4] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut460049 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_2[0] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460050 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_RNIIT4S2[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460051 \bytepkt_cnst_31_0_.bytepkt_2_i_a2[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5350) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_106 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_0[5] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut460052 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[5] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_107 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_0[13] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460052 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_108 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_0[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460052 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[15] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_109 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460050 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_RNIJV4S2[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460051 \bytepkt_cnst_31_0_.bytepkt_2_i_a2[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_110 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460050 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_RNIK15S2[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460051 \bytepkt_cnst_31_0_.bytepkt_2_i_a2[2] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_111 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460050 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_3_RNINPMK3[6] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460051 \bytepkt_cnst_31_0_.bytepkt_2_i_a2[8] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_112 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460050 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_RNIC6SP2[6] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460051 \bytepkt_cnst_31_0_.bytepkt_2_i_a2[10] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_113 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_0[12] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460052 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[12] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_114 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460038 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_3_RNI31TL3[6] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460052 \bytepkt_cnst_31_0_.bytepkt_2_0_a2[27] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_115 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460053 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_RNIM4EV2[24] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460051 \bytepkt_cnst_31_0_.bytepkt_2_i_a2[24] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0203) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_116 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460050 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_RNIRELM2[6] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut460051 \bytepkt_cnst_31_0_.bytepkt_2_i_a2[9] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_117 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460054 \bytepkt_cnst_31_0_.bytepkt_2_i_0[22] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460055 \bytepkt_cnst_31_0_.bytepkt_2_i_0_RNIQJLM2[22] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10BA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0501) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_118 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460056 \bytepkt_cnst_31_0_.bytepkt_2_i_0[6] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460055 \bytepkt_cnst_31_0_.bytepkt_2_i_0_RNIFSMK1[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_119 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460057 \bytepkt_cnst_31_0_.bytepkt_2_i_0[14] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460055 \bytepkt_cnst_31_0_.bytepkt_2_i_0_RNI7LLN1[14] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2722) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_120 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460058 \bytepkt_cnst_31_0_.bytepkt_2_0_a2[4] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460059 \bytepkt_cnst_31_0_.bytepkt_2_0[7] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5054) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_121 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460054 \bytepkt_cnst_31_0_.bytepkt_2_i_0[17] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460060 \bytepkt_cnst_31_0_.bytepkt_2_i_0_RNI16ER1[17] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_122 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460028 \bytepkt_cnst_31_0_.bytepkt_2_i_o2_0[0] ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460045 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2_RNI0LO31[18] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_123 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460022 \bytepkt_cnst_31_0_.bytepkt_2_0_a2_2[7] ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460061 \bytepkt_cnst_31_0_.bytepkt_2_2_0[30] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00EA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_124 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460062 \bytepkt_cnst_31_0_.bytepkt_2_0_0[11] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460063 \bytepkt_cnst_31_0_.bytepkt_2_0[11] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_125 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460064 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[23] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460059 \bytepkt_cnst_31_0_.bytepkt_2_0[23] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460064 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460065 \bytepkt_cnst_31_0_.bytepkt_2_0[3] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460066 \bytepkt_cnst_31_0_.bytepkt_2_0_o2[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460067 \bytepkt_cnst_31_0_.bytepkt_2_0_0[7] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_128 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460018 \bytepkt_cnst_31_0_.un7_q_ECC_0_a2_1 ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460030 \bytepkt_cnst_31_0_.un7_q_ECC_0_a2_4 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_129 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut460068 \u_PH_DLY_FIFO/lut46_1 ( .A(A1), .B(B1), .C(C1), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460069 \u_PH_DLY_FIFO/lut46_0 ( .A(A0), .B(B0), .C(C0), .D(gnd6I), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_51 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_50 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1818) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8181) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_PH_DLY_FIFO_SLICE4_130 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut460070 \u_PH_DLY_FIFO/lut46_7 ( .A(A1), .B(B1), .C(C1), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460030 \u_PH_DLY_FIFO/lut46_9 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_11 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_10 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(vcc5I), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9696) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_PH_DLY_FIFO_SLICE4_131 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut460070 \u_PH_DLY_FIFO/lut46_4 ( .A(A1), .B(B1), .C(C1), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460030 \u_PH_DLY_FIFO/lut46_6 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_65 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_64 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_PH_DLY_FIFO_SLICE4_132 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut460071 \u_PH_DLY_FIFO/lut46_2 ( .A(A1), .B(B1), .C(C1), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460072 \u_PH_DLY_FIFO/lut46_3 ( .A(A0), .B(B0), .C(C0), .D(gnd6I), .Z(F0));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_53 ( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre50001 \u_PH_DLY_FIFO/FF_52 ( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4242) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut460072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2424) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_133 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460018 \bytepkt_cnst_31_0_.un108_q_ECC_0_a2_1_0_x2 ( .A(A1), .B(B1), 
    .C(gnd6I), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460073 \bytepkt_cnst_31_0_.un87_q_ECC_0_a2_0_i_x2 ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6969) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_134 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460074 \bytepkt_cnst_31_0_.bytepkt_2_0_0[23] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460052 \bytepkt_cnst_31_0_.bytepkt_2_0_RNO[4] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEA40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_135 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460074 \bytepkt_cnst_31_0_.bytepkt_2_0_0[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460075 \bytepkt_cnst_31_0_.bytepkt_2_i_a2_3_RNI60IB2[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_136 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460041 \bytepkt_cnst_31_0_.bytepkt_2_0_a2_1[4] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460076 \bytepkt_cnst_31_0_.bytepkt_2_0_o2[11] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut460076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_137 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460030 \bytepkt_cnst_31_0_.un108_q_ECC_0_a2_6 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460073 \bytepkt_cnst_31_0_.un87_q_ECC_0_a2_1_i_x2 ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_138 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460030 \bytepkt_cnst_31_0_.un108_q_ECC_0_a2_4 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460030 \bytepkt_cnst_31_0_.un27_q_ECC_0_a2_4 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_139 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460030 \bytepkt_cnst_31_0_.un108_q_ECC_0_a2_5 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460030 \bytepkt_cnst_31_0_.un27_q_ECC_0_a2_5 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_140 ( input B1, A1, B0, A0, M1, M0, CLK, output F0, Q0, F1, Q1 );
  wire   gnd6I, vcc5I, M1_dly, CLK_dly, M0_dly;

  lut460022 un1_q_bytepkt_en( .A(A1), .B(B1), .C(gnd6I), .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460019 \u_PH_DLY_FIFO/AND2_t7 ( .A(A0), .B(B0), .C(gnd6I), .D(gnd6I), .Z(F0));
  vmuxregsre5 q_bytepkt_en( .D0(M1_dly), .D1(vcc5I), .SD(gnd6I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q1));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  vmuxregsre5 q2_short_en( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE4_141 ( input C1, B1, A1, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   gnd6I, vcc5I, M0_dly, CLK_dly;

  lut460077 \bytepkt_cnst_31_0_.N_347_i ( .A(A1), .B(B1), .C(C1), .D(gnd6I), 
    .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460019 \u_PH_DLY_FIFO/AND2_t8 ( .A(A0), .B(B0), .C(gnd6I), .D(gnd6I), .Z(F0));
  vmuxregsre5 q_chksum_En( .D0(M0_dly), .D1(vcc5I), .SD(gnd6I), .SP(vcc5I), 
    .CK(CLK_dly), .LSR(gnd6I), .Q(Q0));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut460077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE4_142 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut460030 \bytepkt_cnst_31_0_.un87_q_ECC_0_a2_4 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut460030 \bytepkt_cnst_31_0_.un47_q_ECC_0_a2_4 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_143 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460018 \bytepkt_cnst_31_0_.un7_q_ECC_0_a2_5 ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460030 \bytepkt_cnst_31_0_.un47_q_ECC_0_a2_5 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_144 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[18] ( .A(A1), .B(B1), .C(C1), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460030 \bytepkt_cnst_31_0_.un67_q_ECC_0_a2_5 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_145 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut460018 \bytepkt_cnst_31_0_.un7_q_ECC_0_a2_3 ( .A(A1), .B(B1), .C(gnd6I), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460030 \bytepkt_cnst_31_0_.un87_q_ECC_0_a2_3 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_146 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[11] ( .A(A1), .B(B1), .C(C1), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[16] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd6I), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE4_147 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   gnd6I;

  lut46 \bytepkt_cnst_31_0_.bytepkt_2_1_i_m2[14] ( .A(A1), .B(B1), .C(C1), 
    .D(gnd6I), .Z(F1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));
  lut460018 \bytepkt_cnst_31_0_.un7_q_ECC_0_a2_2 ( .A(A0), .B(B0), .C(gnd6I), 
    .D(gnd6I), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_en ( input PADDO, output bytepkt_en );
  wire   gnd6I;

  xo2iobuf6 bytepkt_en_pad( .I(PADDO), .T(gnd6I), .PAD(bytepkt_en));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (PADDO => bytepkt_en) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf6 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module reset_n6 ( output PADDI, input reset_n6 );

  xo2iobuf60078 reset_n6_pad( .Z(PADDI), .PAD(reset_n6));

  specify
    (reset_n6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge reset_n6, 0:0:0);
    $width (negedge reset_n6, 0:0:0);
  endspecify

endmodule

module xo2iobuf60078 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module EoTp ( output PADDI, input EoTp );

  xo2iobuf60078 EoTp_pad( .Z(PADDI), .PAD(EoTp));

  specify
    (EoTp => PADDI) = (0:0:0,0:0:0);
    $width (posedge EoTp, 0:0:0);
    $width (negedge EoTp, 0:0:0);
  endspecify

endmodule

module bytepkt_31_ ( input IOLDO, output bytepkt31 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[31] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt31));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt31) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_31__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[31] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mfflsre6 ( input D0, SP, CK, LSR, output Q );

  FD1P3DX INST01( .D(D0), .SP(SP), .CK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module bytepkt_30_ ( input IOLDO, output bytepkt30 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[30] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt30));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt30) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_30__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[30] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_29_ ( input IOLDO, output bytepkt29 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[29] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt29));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt29) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_29__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[29] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_28_ ( input IOLDO, output bytepkt28 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[28] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt28));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt28) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_28__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[28] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_27_ ( input IOLDO, output bytepkt27 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[27] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt27));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt27) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_27__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[27] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_26_ ( input IOLDO, output bytepkt26 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[26] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt26));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt26) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_26__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[26] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_25_ ( input IOLDO, output bytepkt25 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[25] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt25));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt25) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_25__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[25] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_24_ ( input IOLDO, output bytepkt24 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[24] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt24));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt24) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_24__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[24] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_23_ ( input IOLDO, output bytepkt23 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[23] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt23));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt23) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_23__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[23] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_22_ ( input IOLDO, output bytepkt22 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[22] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt22));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt22) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_22__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[22] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_21_ ( input IOLDO, output bytepkt21 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[21] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt21));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt21) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_21__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[21] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_20_ ( input IOLDO, output bytepkt20 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[20] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt20));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt20) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_20__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[20] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_19_ ( input IOLDO, output bytepkt19 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[19] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt19));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt19) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_19__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[19] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_18_ ( input IOLDO, output bytepkt18 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[18] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt18));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt18) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_18__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[18] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_17_ ( input IOLDO, output bytepkt17 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[17] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt17));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt17) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_17__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[17] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_16_ ( input IOLDO, output bytepkt16 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[16] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt16));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt16) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_16__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[16] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_15_ ( input IOLDO, output bytepkt15 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[15] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt15));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt15) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_15__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[15] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_14_ ( input IOLDO, output bytepkt14 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[14] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt14));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt14) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_14__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[14] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_13_ ( input IOLDO, output bytepkt13 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[13] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt13));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt13) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_13__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[13] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_12_ ( input IOLDO, output bytepkt12 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[12] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt12));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt12) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_12__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[12] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_11_ ( input IOLDO, output bytepkt11 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[11] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt11));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt11) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_11__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[11] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_10_ ( input IOLDO, output bytepkt10 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[10] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt10));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt10) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_10__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[10] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_9_ ( input IOLDO, output bytepkt9 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[9] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt9));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt9) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_9__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[9] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_8_ ( input IOLDO, output bytepkt8 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[8] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt8));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt8) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_8__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[8] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_7_ ( input IOLDO, output bytepkt7 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[7] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt7));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt7) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_7__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[7] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_6_ ( input IOLDO, output bytepkt6 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[6] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt6));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt6) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_6__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[6] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_5_ ( input IOLDO, output bytepkt5 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[5] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt5));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt5) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_5__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[5] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_4_ ( input IOLDO, output bytepkt4 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[4] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt4));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt4) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_4__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[4] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_3_ ( input IOLDO, output bytepkt3 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[3] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt3));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt3) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_3__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[3] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_2_ ( input IOLDO, output bytepkt2 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[2] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt2));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt2) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_2__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[2] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_1_ ( input IOLDO, output bytepkt1 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[1] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt1));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt1) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_1__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[1] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module bytepkt_0_ ( input IOLDO, output bytepkt0 );
  wire   gnd6I;

  xo2iobuf6 \bytepkt_pad[0] ( .I(IOLDO), .T(gnd6I), .PAD(bytepkt0));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (IOLDO => bytepkt0) = (0:0:0,0:0:0);
  endspecify

endmodule

module bytepkt_0__MGIOL ( output IOLDO, input OPOS, CLK );
  wire   vcc5I, gnd6I, OPOS_dly, CLK_dly;

  mfflsre6 \bytepkt_0io[0] ( .D0(OPOS_dly), .SP(vcc5I), .CK(CLK_dly), .LSR(gnd6I), 
    .Q(IOLDO));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_15_ ( output PADDI, input chksum15 );

  xo2iobuf60078 \chksum_pad[15] ( .Z(PADDI), .PAD(chksum15));

  specify
    (chksum15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum15, 0:0:0);
    $width (negedge chksum15, 0:0:0);
  endspecify

endmodule

module chksum_15__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[15] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module smuxlregsre5 ( input D0, SP, CK, LSR, output Q );

  IFS1P3BX INST01( .D(D0), .SP(SP), .SCLK(CK), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module chksum_14_ ( output PADDI, input chksum14 );

  xo2iobuf60078 \chksum_pad[14] ( .Z(PADDI), .PAD(chksum14));

  specify
    (chksum14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum14, 0:0:0);
    $width (negedge chksum14, 0:0:0);
  endspecify

endmodule

module chksum_14__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[14] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_13_ ( output PADDI, input chksum13 );

  xo2iobuf60078 \chksum_pad[13] ( .Z(PADDI), .PAD(chksum13));

  specify
    (chksum13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum13, 0:0:0);
    $width (negedge chksum13, 0:0:0);
  endspecify

endmodule

module chksum_13__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[13] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_12_ ( output PADDI, input chksum12 );

  xo2iobuf60078 \chksum_pad[12] ( .Z(PADDI), .PAD(chksum12));

  specify
    (chksum12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum12, 0:0:0);
    $width (negedge chksum12, 0:0:0);
  endspecify

endmodule

module chksum_12__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[12] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_11_ ( output PADDI, input chksum11 );

  xo2iobuf60078 \chksum_pad[11] ( .Z(PADDI), .PAD(chksum11));

  specify
    (chksum11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum11, 0:0:0);
    $width (negedge chksum11, 0:0:0);
  endspecify

endmodule

module chksum_11__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[11] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_10_ ( output PADDI, input chksum10 );

  xo2iobuf60078 \chksum_pad[10] ( .Z(PADDI), .PAD(chksum10));

  specify
    (chksum10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum10, 0:0:0);
    $width (negedge chksum10, 0:0:0);
  endspecify

endmodule

module chksum_10__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[10] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_9_ ( output PADDI, input chksum9 );

  xo2iobuf60078 \chksum_pad[9] ( .Z(PADDI), .PAD(chksum9));

  specify
    (chksum9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum9, 0:0:0);
    $width (negedge chksum9, 0:0:0);
  endspecify

endmodule

module chksum_9__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[9] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_8_ ( output PADDI, input chksum8 );

  xo2iobuf60078 \chksum_pad[8] ( .Z(PADDI), .PAD(chksum8));

  specify
    (chksum8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum8, 0:0:0);
    $width (negedge chksum8, 0:0:0);
  endspecify

endmodule

module chksum_8__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[8] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_7_ ( output PADDI, input chksum7 );

  xo2iobuf60078 \chksum_pad[7] ( .Z(PADDI), .PAD(chksum7));

  specify
    (chksum7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum7, 0:0:0);
    $width (negedge chksum7, 0:0:0);
  endspecify

endmodule

module chksum_7__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[7] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_6_ ( output PADDI, input chksum6 );

  xo2iobuf60078 \chksum_pad[6] ( .Z(PADDI), .PAD(chksum6));

  specify
    (chksum6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum6, 0:0:0);
    $width (negedge chksum6, 0:0:0);
  endspecify

endmodule

module chksum_6__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[6] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_5_ ( output PADDI, input chksum5 );

  xo2iobuf60078 \chksum_pad[5] ( .Z(PADDI), .PAD(chksum5));

  specify
    (chksum5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum5, 0:0:0);
    $width (negedge chksum5, 0:0:0);
  endspecify

endmodule

module chksum_5__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[5] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_4_ ( output PADDI, input chksum4 );

  xo2iobuf60078 \chksum_pad[4] ( .Z(PADDI), .PAD(chksum4));

  specify
    (chksum4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum4, 0:0:0);
    $width (negedge chksum4, 0:0:0);
  endspecify

endmodule

module chksum_4__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[4] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_3_ ( output PADDI, input chksum3 );

  xo2iobuf60078 \chksum_pad[3] ( .Z(PADDI), .PAD(chksum3));

  specify
    (chksum3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum3, 0:0:0);
    $width (negedge chksum3, 0:0:0);
  endspecify

endmodule

module chksum_3__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[3] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_2_ ( output PADDI, input chksum2 );

  xo2iobuf60078 \chksum_pad[2] ( .Z(PADDI), .PAD(chksum2));

  specify
    (chksum2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum2, 0:0:0);
    $width (negedge chksum2, 0:0:0);
  endspecify

endmodule

module chksum_2__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[2] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_1_ ( output PADDI, input chksum1 );

  xo2iobuf60078 \chksum_pad[1] ( .Z(PADDI), .PAD(chksum1));

  specify
    (chksum1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum1, 0:0:0);
    $width (negedge chksum1, 0:0:0);
  endspecify

endmodule

module chksum_1__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[1] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_0_ ( output PADDI, input chksum0 );

  xo2iobuf60078 \chksum_pad[0] ( .Z(PADDI), .PAD(chksum0));

  specify
    (chksum0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum0, 0:0:0);
    $width (negedge chksum0, 0:0:0);
  endspecify

endmodule

module chksum_0__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre5 \q_chksum_0io[0] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module chksum_rdy ( output PADDI, input chksum_rdy );

  xo2iobuf60078 chksum_rdy_pad( .Z(PADDI), .PAD(chksum_rdy));

  specify
    (chksum_rdy => PADDI) = (0:0:0,0:0:0);
    $width (posedge chksum_rdy, 0:0:0);
    $width (negedge chksum_rdy, 0:0:0);
  endspecify

endmodule

module wc_15_ ( output PADDI, input wc15 );

  xo2iobuf60078 \wc_pad[15] ( .Z(PADDI), .PAD(wc15));

  specify
    (wc15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc15, 0:0:0);
    $width (negedge wc15, 0:0:0);
  endspecify

endmodule

module wc_15__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[15] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module smuxlregsre50079 ( input D0, SP, CK, LSR, output Q );

  IFS1P3DX INST01( .D(D0), .SP(SP), .SCLK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module wc_14_ ( output PADDI, input wc14 );

  xo2iobuf60078 \wc_pad[14] ( .Z(PADDI), .PAD(wc14));

  specify
    (wc14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc14, 0:0:0);
    $width (negedge wc14, 0:0:0);
  endspecify

endmodule

module wc_14__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[14] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_13_ ( output PADDI, input wc13 );

  xo2iobuf60078 \wc_pad[13] ( .Z(PADDI), .PAD(wc13));

  specify
    (wc13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc13, 0:0:0);
    $width (negedge wc13, 0:0:0);
  endspecify

endmodule

module wc_13__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[13] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_12_ ( output PADDI, input wc12 );

  xo2iobuf60078 \wc_pad[12] ( .Z(PADDI), .PAD(wc12));

  specify
    (wc12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc12, 0:0:0);
    $width (negedge wc12, 0:0:0);
  endspecify

endmodule

module wc_12__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[12] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_11_ ( output PADDI, input wc11 );

  xo2iobuf60078 \wc_pad[11] ( .Z(PADDI), .PAD(wc11));

  specify
    (wc11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc11, 0:0:0);
    $width (negedge wc11, 0:0:0);
  endspecify

endmodule

module wc_11__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[11] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_10_ ( output PADDI, input wc10 );

  xo2iobuf60078 \wc_pad[10] ( .Z(PADDI), .PAD(wc10));

  specify
    (wc10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc10, 0:0:0);
    $width (negedge wc10, 0:0:0);
  endspecify

endmodule

module wc_10__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[10] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_9_ ( output PADDI, input wc9 );

  xo2iobuf60078 \wc_pad[9] ( .Z(PADDI), .PAD(wc9));

  specify
    (wc9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc9, 0:0:0);
    $width (negedge wc9, 0:0:0);
  endspecify

endmodule

module wc_9__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[9] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_8_ ( output PADDI, input wc8 );

  xo2iobuf60078 \wc_pad[8] ( .Z(PADDI), .PAD(wc8));

  specify
    (wc8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc8, 0:0:0);
    $width (negedge wc8, 0:0:0);
  endspecify

endmodule

module wc_8__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[8] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_7_ ( output PADDI, input wc7 );

  xo2iobuf60078 \wc_pad[7] ( .Z(PADDI), .PAD(wc7));

  specify
    (wc7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc7, 0:0:0);
    $width (negedge wc7, 0:0:0);
  endspecify

endmodule

module wc_7__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[7] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_6_ ( output PADDI, input wc6 );

  xo2iobuf60078 \wc_pad[6] ( .Z(PADDI), .PAD(wc6));

  specify
    (wc6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc6, 0:0:0);
    $width (negedge wc6, 0:0:0);
  endspecify

endmodule

module wc_6__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[6] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_5_ ( output PADDI, input wc5 );

  xo2iobuf60078 \wc_pad[5] ( .Z(PADDI), .PAD(wc5));

  specify
    (wc5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc5, 0:0:0);
    $width (negedge wc5, 0:0:0);
  endspecify

endmodule

module wc_5__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[5] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_4_ ( output PADDI, input wc4 );

  xo2iobuf60078 \wc_pad[4] ( .Z(PADDI), .PAD(wc4));

  specify
    (wc4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc4, 0:0:0);
    $width (negedge wc4, 0:0:0);
  endspecify

endmodule

module wc_4__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[4] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_3_ ( output PADDI, input wc3 );

  xo2iobuf60078 \wc_pad[3] ( .Z(PADDI), .PAD(wc3));

  specify
    (wc3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc3, 0:0:0);
    $width (negedge wc3, 0:0:0);
  endspecify

endmodule

module wc_3__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[3] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_2_ ( output PADDI, input wc2 );

  xo2iobuf60078 \wc_pad[2] ( .Z(PADDI), .PAD(wc2));

  specify
    (wc2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc2, 0:0:0);
    $width (negedge wc2, 0:0:0);
  endspecify

endmodule

module wc_2__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[2] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_1_ ( output PADDI, input wc1 );

  xo2iobuf60078 \wc_pad[1] ( .Z(PADDI), .PAD(wc1));

  specify
    (wc1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc1, 0:0:0);
    $width (negedge wc1, 0:0:0);
  endspecify

endmodule

module wc_1__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[1] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module wc_0_ ( output PADDI, input wc0 );

  xo2iobuf60078 \wc_pad[0] ( .Z(PADDI), .PAD(wc0));

  specify
    (wc0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge wc0, 0:0:0);
    $width (negedge wc0, 0:0:0);
  endspecify

endmodule

module wc_0__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_wc_0io[0] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_5_ ( output PADDI, input dt5 );

  xo2iobuf60078 \dt_pad[5] ( .Z(PADDI), .PAD(dt5));

  specify
    (dt5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge dt5, 0:0:0);
    $width (negedge dt5, 0:0:0);
  endspecify

endmodule

module dt_5__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_dt_0io[5] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_4_ ( output PADDI, input dt4 );

  xo2iobuf60078 \dt_pad[4] ( .Z(PADDI), .PAD(dt4));

  specify
    (dt4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge dt4, 0:0:0);
    $width (negedge dt4, 0:0:0);
  endspecify

endmodule

module dt_4__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_dt_0io[4] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_3_ ( output PADDI, input dt3 );

  xo2iobuf60078 \dt_pad[3] ( .Z(PADDI), .PAD(dt3));

  specify
    (dt3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge dt3, 0:0:0);
    $width (negedge dt3, 0:0:0);
  endspecify

endmodule

module dt_3__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_dt_0io[3] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_2_ ( output PADDI, input dt2 );

  xo2iobuf60078 \dt_pad[2] ( .Z(PADDI), .PAD(dt2));

  specify
    (dt2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge dt2, 0:0:0);
    $width (negedge dt2, 0:0:0);
  endspecify

endmodule

module dt_2__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_dt_0io[2] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_1_ ( output PADDI, input dt1 );

  xo2iobuf60078 \dt_pad[1] ( .Z(PADDI), .PAD(dt1));

  specify
    (dt1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge dt1, 0:0:0);
    $width (negedge dt1, 0:0:0);
  endspecify

endmodule

module dt_1__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_dt_0io[1] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_0_ ( output PADDI, input dt0 );

  xo2iobuf60078 \dt_pad[0] ( .Z(PADDI), .PAD(dt0));

  specify
    (dt0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge dt0, 0:0:0);
    $width (negedge dt0, 0:0:0);
  endspecify

endmodule

module dt_0__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_dt_0io[0] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vc_1_ ( output PADDI, input vc1 );

  xo2iobuf60078 \vc_pad[1] ( .Z(PADDI), .PAD(vc1));

  specify
    (vc1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge vc1, 0:0:0);
    $width (negedge vc1, 0:0:0);
  endspecify

endmodule

module vc_1__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_vc_0io[1] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vc_0_ ( output PADDI, input vc0 );

  xo2iobuf60078 \vc_pad[0] ( .Z(PADDI), .PAD(vc0));

  specify
    (vc0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge vc0, 0:0:0);
    $width (negedge vc0, 0:0:0);
  endspecify

endmodule

module vc_0__MGIOL ( input DI, CE, CLK, output IN );
  wire   gnd6I, DI_dly, CLK_dly, CE_dly;

  smuxlregsre50079 \q_vc_0io[0] ( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module byte_data7_31_ ( output PADDI, input bytedata31 );

  xo2iobuf60078 \byte_data7_pad[31] ( .Z(PADDI), .PAD(bytedata31));

  specify
    (bytedata31 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata31, 0:0:0);
    $width (negedge bytedata31, 0:0:0);
  endspecify

endmodule

module byte_data7_30_ ( output PADDI, input bytedata30 );

  xo2iobuf60078 \byte_data7_pad[30] ( .Z(PADDI), .PAD(bytedata30));

  specify
    (bytedata30 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata30, 0:0:0);
    $width (negedge bytedata30, 0:0:0);
  endspecify

endmodule

module byte_data7_29_ ( output PADDI, input bytedata29 );

  xo2iobuf60078 \byte_data7_pad[29] ( .Z(PADDI), .PAD(bytedata29));

  specify
    (bytedata29 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata29, 0:0:0);
    $width (negedge bytedata29, 0:0:0);
  endspecify

endmodule

module byte_data7_28_ ( output PADDI, input bytedata28 );

  xo2iobuf60078 \byte_data7_pad[28] ( .Z(PADDI), .PAD(bytedata28));

  specify
    (bytedata28 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata28, 0:0:0);
    $width (negedge bytedata28, 0:0:0);
  endspecify

endmodule

module byte_data7_27_ ( output PADDI, input bytedata27 );

  xo2iobuf60078 \byte_data7_pad[27] ( .Z(PADDI), .PAD(bytedata27));

  specify
    (bytedata27 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata27, 0:0:0);
    $width (negedge bytedata27, 0:0:0);
  endspecify

endmodule

module byte_data7_26_ ( output PADDI, input bytedata26 );

  xo2iobuf60078 \byte_data7_pad[26] ( .Z(PADDI), .PAD(bytedata26));

  specify
    (bytedata26 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata26, 0:0:0);
    $width (negedge bytedata26, 0:0:0);
  endspecify

endmodule

module byte_data7_25_ ( output PADDI, input bytedata25 );

  xo2iobuf60078 \byte_data7_pad[25] ( .Z(PADDI), .PAD(bytedata25));

  specify
    (bytedata25 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata25, 0:0:0);
    $width (negedge bytedata25, 0:0:0);
  endspecify

endmodule

module byte_data7_24_ ( output PADDI, input bytedata24 );

  xo2iobuf60078 \byte_data7_pad[24] ( .Z(PADDI), .PAD(bytedata24));

  specify
    (bytedata24 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata24, 0:0:0);
    $width (negedge bytedata24, 0:0:0);
  endspecify

endmodule

module byte_data7_23_ ( output PADDI, input bytedata23 );

  xo2iobuf60078 \byte_data7_pad[23] ( .Z(PADDI), .PAD(bytedata23));

  specify
    (bytedata23 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata23, 0:0:0);
    $width (negedge bytedata23, 0:0:0);
  endspecify

endmodule

module byte_data7_22_ ( output PADDI, input bytedata22 );

  xo2iobuf60078 \byte_data7_pad[22] ( .Z(PADDI), .PAD(bytedata22));

  specify
    (bytedata22 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata22, 0:0:0);
    $width (negedge bytedata22, 0:0:0);
  endspecify

endmodule

module byte_data7_21_ ( output PADDI, input bytedata21 );

  xo2iobuf60078 \byte_data7_pad[21] ( .Z(PADDI), .PAD(bytedata21));

  specify
    (bytedata21 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata21, 0:0:0);
    $width (negedge bytedata21, 0:0:0);
  endspecify

endmodule

module byte_data7_20_ ( output PADDI, input bytedata20 );

  xo2iobuf60078 \byte_data7_pad[20] ( .Z(PADDI), .PAD(bytedata20));

  specify
    (bytedata20 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata20, 0:0:0);
    $width (negedge bytedata20, 0:0:0);
  endspecify

endmodule

module byte_data7_19_ ( output PADDI, input bytedata19 );

  xo2iobuf60078 \byte_data7_pad[19] ( .Z(PADDI), .PAD(bytedata19));

  specify
    (bytedata19 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata19, 0:0:0);
    $width (negedge bytedata19, 0:0:0);
  endspecify

endmodule

module byte_data7_18_ ( output PADDI, input bytedata18 );

  xo2iobuf60078 \byte_data7_pad[18] ( .Z(PADDI), .PAD(bytedata18));

  specify
    (bytedata18 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata18, 0:0:0);
    $width (negedge bytedata18, 0:0:0);
  endspecify

endmodule

module byte_data7_17_ ( output PADDI, input bytedata17 );

  xo2iobuf60078 \byte_data7_pad[17] ( .Z(PADDI), .PAD(bytedata17));

  specify
    (bytedata17 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata17, 0:0:0);
    $width (negedge bytedata17, 0:0:0);
  endspecify

endmodule

module byte_data7_16_ ( output PADDI, input bytedata16 );

  xo2iobuf60078 \byte_data7_pad[16] ( .Z(PADDI), .PAD(bytedata16));

  specify
    (bytedata16 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata16, 0:0:0);
    $width (negedge bytedata16, 0:0:0);
  endspecify

endmodule

module byte_data7_15_ ( output PADDI, input bytedata15 );

  xo2iobuf60078 \byte_data7_pad[15] ( .Z(PADDI), .PAD(bytedata15));

  specify
    (bytedata15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata15, 0:0:0);
    $width (negedge bytedata15, 0:0:0);
  endspecify

endmodule

module byte_data7_14_ ( output PADDI, input bytedata14 );

  xo2iobuf60078 \byte_data7_pad[14] ( .Z(PADDI), .PAD(bytedata14));

  specify
    (bytedata14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata14, 0:0:0);
    $width (negedge bytedata14, 0:0:0);
  endspecify

endmodule

module byte_data7_13_ ( output PADDI, input bytedata13 );

  xo2iobuf60078 \byte_data7_pad[13] ( .Z(PADDI), .PAD(bytedata13));

  specify
    (bytedata13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata13, 0:0:0);
    $width (negedge bytedata13, 0:0:0);
  endspecify

endmodule

module byte_data7_12_ ( output PADDI, input bytedata12 );

  xo2iobuf60078 \byte_data7_pad[12] ( .Z(PADDI), .PAD(bytedata12));

  specify
    (bytedata12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata12, 0:0:0);
    $width (negedge bytedata12, 0:0:0);
  endspecify

endmodule

module byte_data7_11_ ( output PADDI, input bytedata11 );

  xo2iobuf60078 \byte_data7_pad[11] ( .Z(PADDI), .PAD(bytedata11));

  specify
    (bytedata11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata11, 0:0:0);
    $width (negedge bytedata11, 0:0:0);
  endspecify

endmodule

module byte_data7_10_ ( output PADDI, input bytedata10 );

  xo2iobuf60078 \byte_data7_pad[10] ( .Z(PADDI), .PAD(bytedata10));

  specify
    (bytedata10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata10, 0:0:0);
    $width (negedge bytedata10, 0:0:0);
  endspecify

endmodule

module byte_data7_9_ ( output PADDI, input bytedata9 );

  xo2iobuf60078 \byte_data7_pad[9] ( .Z(PADDI), .PAD(bytedata9));

  specify
    (bytedata9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata9, 0:0:0);
    $width (negedge bytedata9, 0:0:0);
  endspecify

endmodule

module byte_data7_8_ ( output PADDI, input bytedata8 );

  xo2iobuf60078 \byte_data7_pad[8] ( .Z(PADDI), .PAD(bytedata8));

  specify
    (bytedata8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata8, 0:0:0);
    $width (negedge bytedata8, 0:0:0);
  endspecify

endmodule

module byte_data7_7_ ( output PADDI, input bytedata7 );

  xo2iobuf60078 \byte_data7_pad[7] ( .Z(PADDI), .PAD(bytedata7));

  specify
    (bytedata7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata7, 0:0:0);
    $width (negedge bytedata7, 0:0:0);
  endspecify

endmodule

module byte_data7_6_ ( output PADDI, input bytedata6 );

  xo2iobuf60078 \byte_data7_pad[6] ( .Z(PADDI), .PAD(bytedata6));

  specify
    (bytedata6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata6, 0:0:0);
    $width (negedge bytedata6, 0:0:0);
  endspecify

endmodule

module byte_data7_5_ ( output PADDI, input bytedata5 );

  xo2iobuf60078 \byte_data7_pad[5] ( .Z(PADDI), .PAD(bytedata5));

  specify
    (bytedata5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata5, 0:0:0);
    $width (negedge bytedata5, 0:0:0);
  endspecify

endmodule

module byte_data7_4_ ( output PADDI, input bytedata4 );

  xo2iobuf60078 \byte_data7_pad[4] ( .Z(PADDI), .PAD(bytedata4));

  specify
    (bytedata4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata4, 0:0:0);
    $width (negedge bytedata4, 0:0:0);
  endspecify

endmodule

module byte_data7_3_ ( output PADDI, input bytedata3 );

  xo2iobuf60078 \byte_data7_pad[3] ( .Z(PADDI), .PAD(bytedata3));

  specify
    (bytedata3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata3, 0:0:0);
    $width (negedge bytedata3, 0:0:0);
  endspecify

endmodule

module byte_data7_2_ ( output PADDI, input bytedata2 );

  xo2iobuf60078 \byte_data7_pad[2] ( .Z(PADDI), .PAD(bytedata2));

  specify
    (bytedata2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata2, 0:0:0);
    $width (negedge bytedata2, 0:0:0);
  endspecify

endmodule

module byte_data7_1_ ( output PADDI, input bytedata1 );

  xo2iobuf60078 \byte_data7_pad[1] ( .Z(PADDI), .PAD(bytedata1));

  specify
    (bytedata1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata1, 0:0:0);
    $width (negedge bytedata1, 0:0:0);
  endspecify

endmodule

module byte_data7_0_ ( output PADDI, input bytedata0 );

  xo2iobuf60078 \byte_data7_pad[0] ( .Z(PADDI), .PAD(bytedata0));

  specify
    (bytedata0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge bytedata0, 0:0:0);
    $width (negedge bytedata0, 0:0:0);
  endspecify

endmodule

module byte_clk5 ( output PADDI, input byte_clk5 );

  xo2iobuf60078 byte_clk5_pad( .Z(PADDI), .PAD(byte_clk5));

  specify
    (byte_clk5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge byte_clk5, 0:0:0);
    $width (negedge byte_clk5, 0:0:0);
  endspecify

endmodule

module long_en ( output PADDI, input long_en );

  xo2iobuf60078 long_en_pad( .Z(PADDI), .PAD(long_en));

  specify
    (long_en => PADDI) = (0:0:0,0:0:0);
    $width (posedge long_en, 0:0:0);
    $width (negedge long_en, 0:0:0);
  endspecify

endmodule

module long_en_MGIOL ( input DI, CLK, output IN );
  wire   vcc5I, gnd6I, DI_dly, CLK_dly;

  smuxlregsre50079 q_long_en_0io( .D0(DI_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module short_en ( output PADDI, input short_en );

  xo2iobuf60078 short_en_pad( .Z(PADDI), .PAD(short_en));

  specify
    (short_en => PADDI) = (0:0:0,0:0:0);
    $width (posedge short_en, 0:0:0);
    $width (negedge short_en, 0:0:0);
  endspecify

endmodule

module short_en_MGIOL ( input DI, CLK, output IN );
  wire   vcc5I, gnd6I, DI_dly, CLK_dly;

  smuxlregsre50079 q_short_en_0io( .D0(DI_dly), .SP(vcc5I), .CK(CLK_dly), 
    .LSR(gnd6I), .Q(IN));
  vcc5 DRIVEvcc5( .PWR1(vcc5I));
  gnd6 DRIVEgnd6( .PWR0(gnd6I));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module GSR_INST3 ( input GSRNET );

  GSR5MODE6 GSR_INST3_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE6 ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
